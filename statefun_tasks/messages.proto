syntax = "proto3";

import "google/protobuf/any.proto";

package statefun_tasks;

message NoneValue {
}

message Address {
    string namespace = 1;
    string type = 2;
    string id = 3;
}

message MapOfStringToAny {
    map <string, google.protobuf.Any> items = 1;
}

message ArrayOfAny {
    repeated google.protobuf.Any items = 1;
}

message TupleOfAny {
    repeated google.protobuf.Any items = 1;
}

message TaskEntry {
    string task_id = 1;
    string task_type = 2;
    google.protobuf.Any request = 3;
    bool complete = 4;
    bool is_finally = 5;
    string namespace = 6;
    string worker_name = 7;
    string message_type = 8;
    string pipeline_address = 9;
    string pipeline_id = 10;
    string parent_task_address = 11;
    string parent_task_id = 12;
    bool is_fruitful = 13;
    TaskRetryPolicy retry_policy = 14;
    string module_name = 15;
    bool with_state = 16;
    bool with_context = 17;
}

message GroupEntry {
    string group_id = 1;
    repeated Pipeline group = 2;
}

message PipelineEntry {
    oneof entry {
        TaskEntry task_entry = 1;
        GroupEntry group_entry = 2;
    }
}

message Pipeline {
    repeated PipelineEntry entries = 1;
}

message TaskRetryPolicy {
    repeated string retry_for = 1;
    int32 max_retries = 2;
    float delay_ms = 3;
    bool exponential_back_off = 4;
}

message ArgsAndKwargs {
    TupleOfAny args = 1;
    MapOfStringToAny kwargs = 2;
}

message TaskRequest {
    string id = 1;
    string type = 2;
    oneof reply {
        string reply_topic = 3;
        Address reply_address = 4;
    }
    google.protobuf.Any request = 5;
    google.protobuf.Any state = 6;
    TaskRetryPolicy retry_policy = 7;
}

message TaskResult {
    string id = 1;
    string type = 2;
    google.protobuf.Any result = 3;
    google.protobuf.Any state = 4;
}

message TaskException {
    string id = 1;
    string type = 2;
    string exception_type = 3;
    string exception_message = 4;
    string stacktrace = 5;
    google.protobuf.Any state = 6;
    bool maybe_retry = 7;
    TaskRetryPolicy retry_policy = 8;
}

message TaskState {
    int32 retry_count = 1;
    string original_caller_address = 2;
    string original_caller_id = 3;
}

message PipelineState {
    string address = 1;
    string caller_id = 2;
    string caller_address = 3;
    string pipeline_id = 4;
    Pipeline pipeline = 5;
    TaskResults task_results = 6;
    oneof before_finally {
        TaskResult result_before_finally = 7;
        TaskException exception_before_finally = 8;
    }
}

message TaskResults {
    map<string, google.protobuf.Any> by_id = 1;
}

enum TaskAction {
    GET_STATUS = 0;
    GET_REQUEST = 1;
    GET_RESULT = 2;
}

message TaskActionRequest {
    string id = 1;
    oneof reply {
        string reply_topic = 2;
        Address reply_address = 3;
    }
    TaskAction action = 4;
}

message TaskActionResult {
    string id = 1;
    TaskAction action = 2;
    google.protobuf.Any result = 3;
}

message TaskActionException {
    string id = 1;
    TaskAction action = 2;
    string exception_type = 3;
    string exception_message = 4;
    string stacktrace = 5;
}

message TaskStatus {
    enum Status {
        PENDING = 0;
        RUNNING = 1;
        COMPLETED = 2;
        FAILED = 3;
    }
    Status status = 1;
}
