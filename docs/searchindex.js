Search.setIndex({"docnames": ["actions", "api", "api/flink_tasks", "api/flink_tasks_client", "api/generated/statefun_tasks.DefaultSerialiser", "api/generated/statefun_tasks.FlinkTasks", "api/generated/statefun_tasks.PipelineBuilder", "api/generated/statefun_tasks.TaskContext", "api/generated/statefun_tasks.client.FlinkTasksClient", "api/generated/statefun_tasks.client.FlinkTasksClientFactory", "api/generated/statefun_tasks.client.TaskStatus", "api/generated/statefun_tasks.events.EventHandlers", "deployment_topologies", "effects", "events", "extensions", "getting_started", "index", "pipelines", "stateful_tasks", "tasks"], "filenames": ["actions.rst", "api.rst", "api/flink_tasks.rst", "api/flink_tasks_client.rst", "api/generated/statefun_tasks.DefaultSerialiser.rst", "api/generated/statefun_tasks.FlinkTasks.rst", "api/generated/statefun_tasks.PipelineBuilder.rst", "api/generated/statefun_tasks.TaskContext.rst", "api/generated/statefun_tasks.client.FlinkTasksClient.rst", "api/generated/statefun_tasks.client.FlinkTasksClientFactory.rst", "api/generated/statefun_tasks.client.TaskStatus.rst", "api/generated/statefun_tasks.events.EventHandlers.rst", "deployment_topologies.rst", "effects.rst", "events.rst", "extensions.rst", "getting_started.rst", "index.rst", "pipelines.rst", "stateful_tasks.rst", "tasks.rst"], "titles": ["Actions", "API Reference", "Worker API", "Client API", "DefaultSerialiser", "FlinkTasks", "PipelineBuilder", "TaskContext", "FlinkTasksClient", "FlinkTasksClientFactory", "TaskStatus", "EventHandlers", "Deployment Topologies", "Effects", "Events", "Extensions", "Getting Started", "Flink Tasks", "Pipelines", "Stateful Tasks", "Tasks"], "terms": {"ar": [0, 6, 8, 9, 15, 18, 19, 20], "us": [0, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20], "state": [0, 4, 5, 6, 12, 14, 17, 20], "i": [0, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19], "flight": 0, "multipli": [0, 5, 13, 18, 20], "send": [0, 5, 6, 7, 12, 13, 15, 18, 19, 20], "3": [0, 13, 14, 18, 19, 20], "2": [0, 13, 14, 18, 19, 20], "continue_with": [0, 6, 12, 13, 18], "divid": [0, 13, 18], "client": [0, 1, 8, 9, 10, 12, 13, 15, 18, 19, 20], "submit": [0, 8, 9, 18], "non": [0, 18], "block": 0, "fire": 0, "forget": 0, "await": [0, 12, 13, 15, 18, 19, 20], "get_status_async": [0, 8], "type": [0, 4, 5, 6, 7, 8, 9, 12], "taskstatu": [0, 1, 14], "get_request_async": [0, 8], "taskrequest": [0, 4, 5, 6, 7, 8, 12, 14], "get_result_async": [0, 8], "taskresult": [0, 4, 5, 8], "mai": [0, 15, 18, 19, 20], "unpaus": [0, 8], "a_long_running_task": 0, "save": 0, "pause_pipeline_async": [0, 8], "piplin": 0, "like": [0, 18], "befor": [0, 5, 14], "task": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16], "run": [0, 5], "unpause_pipeline_async": [0, 8], "schedul": 0, "complet": 0, "cancel_pipeline_async": [0, 8], "worker": [1, 5, 6, 7, 8, 9, 12, 15, 20], "flinktask": [1, 12], "taskcontext": [1, 5], "pipelinebuild": [1, 5, 8, 18, 19], "defaultserialis": [1, 5, 6, 7, 8, 9], "eventhandl": [1, 5], "flinktasksclientfactori": [1, 8], "flinktaskscli": [1, 9, 20], "class": [4, 5, 6, 7, 8, 9, 10, 11], "statefun_task": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "known_proto_typ": 4, "none": [4, 5, 6, 7, 8, 9, 14], "protobuf_convert": 4, "default": [4, 5, 6, 8, 9, 12, 15, 18, 19], "protobuf": [4, 5, 6, 18], "serialis": [4, 5, 6, 7, 8, 9, 18], "flink": [4, 5, 6, 7, 8, 9, 12, 14, 16, 19, 20], "paramet": [4, 5, 6, 7, 8, 9, 20], "option": [4, 5, 6, 7, 8, 9, 12, 15], "iter": [4, 6], "messag": [4, 5, 6, 7, 14, 18, 20], "an": [4, 5, 6, 7, 10, 12, 13, 16, 17], "arrai": 4, "known": 4, "pack": 4, "insid": [4, 6], "ani": [4, 5, 6, 7, 18, 20], "__init__": [4, 5, 6, 7, 8, 9, 10, 11], "method": [4, 5, 6, 7, 8, 9, 11], "deserialise_args_and_kwarg": 4, "request": [4, 5, 7, 8, 9, 12], "deserialis": [4, 6], "python": [4, 5, 6, 15, 16, 20], "arg": [4, 5, 6, 18], "kwarg": [4, 5, 6, 18], "return": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20], "tupl": [4, 5, 6], "deserialise_request": 4, "task_request": [4, 5, 7, 11, 14], "dserialis": 4, "back": [4, 6, 20], "deserialise_result": 4, "task_result": [4, 5, 11, 14], "result": [4, 5, 6, 8, 12, 13, 15, 18, 19, 20], "from_proto": [4, 6], "proto": 4, "convert": [4, 7], "from": [4, 5, 6, 7, 12, 13, 15, 16], "valu": [4, 5, 7, 10, 18], "serialise_args_and_kwarg": 4, "If": [4, 5, 7, 14], "singl": [4, 6, 18, 20], "alreadi": 4, "instanc": [4, 5, 8], "otherwis": [4, 5, 6], "argsandkwarg": 4, "serialise_request": 4, "retry_polici": [4, 5, 6, 20], "format": [4, 7], "retri": [4, 5, 6, 7, 18, 20], "polici": [4, 5, 6], "serialise_result": 4, "invoc": [4, 20], "to_proto": [4, 6], "item": [4, 5], "possibli": 4, "default_namespac": [5, 6, 12], "default_worker_nam": [5, 6, 12], "egress_type_nam": [5, 7, 12], "egress_message_max_s": [5, 7], "state_expir": 5, "keep_task_st": 5, "fals": [5, 6, 14], "embedded_pipeline_namespac": [5, 12], "embedded_pipeline_typ": [5, 12], "implement": [5, 18], "str": [5, 7, 19], "namespac": [5, 6, 7, 12, 19], "expos": 5, "function": [5, 6, 12, 14, 15, 16, 17, 18, 19, 20], "under": 5, "map": [5, 8, 9, 18], "statefun": [5, 7, 12, 16, 20], "modul": [5, 12], "yaml": [5, 12], "name": [5, 6, 7], "egress": [5, 7, 8, 9, 12, 14], "maximum": [5, 6, 7], "size": [5, 7, 18], "byte": [5, 7], "specifi": [5, 7], "attempt": [5, 7], "over": [5, 7], "thi": [5, 6, 7, 8, 12, 14, 15, 18], "rais": [5, 6, 7, 14, 18], "messagesizeexceed": [5, 7], "except": [5, 6, 7, 18, 20], "set": [5, 6, 7, 8, 9, 19, 20], "durat": 5, "after": [5, 7, 13], "which": [5, 6, 7, 18], "expir": [5, 12], "expire_after_cal": 5, "whether": [5, 7, 8], "keep": 5, "associ": [5, 7], "well": 5, "pipelin": [5, 6, 7, 8, 12, 13, 15, 16, 17, 19], "embed": [5, 12], "forward": 5, "attribut": [5, 6, 7, 8, 10, 20], "bind": [5, 6, 12, 13, 15, 18, 19, 20], "worker_nam": [5, 6, 7, 12, 19], "with_stat": [5, 18], "is_fruit": [5, 6], "true": [5, 6, 14, 18, 19, 20], "module_nam": 5, "with_context": [5, 19, 20], "display_nam": [5, 6], "task_id": [5, 6, 19], "decor": [5, 6, 11, 15, 19], "place": [5, 18], "retrypolici": [5, 14, 20], "should": [5, 6, 18], "throw": [5, 18], "bool": [5, 6], "pass": [5, 6, 8, 9, 12, 14, 20], "object": 5, "first": [5, 13, 18], "second": [5, 20], "also": [5, 14, 18, 19], "The": [5, 6, 7, 14, 16, 18], "produc": 5, "fruit": [5, 18], "simpli": 5, "address": [5, 7, 12, 19], "function_nam": 5, "contain": [5, 6, 16], "context": [5, 7, 11, 14, 19], "friendli": [5, 6], "fix": [5, 19], "id": [5, 6, 7, 8, 9, 12, 19], "order": [5, 6], "make": [5, 6], "clone_task_request": 5, "clone": 5, "async": [5, 8, 11, 12, 20], "emit_result": 5, "task_input": 5, "delai": [5, 7, 12, 20], "cancellation_token": [5, 7], "emit": [5, 12], "incom": 5, "taskactionrequest": [5, 8, 12], "taskexcept": 5, "cancel": [5, 7, 8], "token": [5, 7], "properti": [5, 6, 7, 8, 9], "event": [5, 11, 12, 17], "static": [5, 6, 7, 9], "extend": 5, "param": 5, "transform": 5, "fn": 5, "to_task": 5, "wrap": 5, "addit": [5, 7, 8, 9, 13], "fail": [5, 7, 14], "ex": [5, 18], "failur": [5, 18], "get_task": [5, 6], "task_typ": 5, "given": [5, 6, 19], "e": [5, 6, 7, 8, 9, 18], "g": [5, 6, 7, 8, 9], "exampl": [5, 7, 8, 9, 12, 13, 16, 20], "regist": 5, "fun": [5, 6], "wrapper": [5, 7, 20], "equival": 5, "functool": 5, "here": [5, 16], "run_async": [5, 20], "provid": 5, "input": [5, 6], "func": 5, "builder": [5, 6], "send_result": 5, "ellipsi": [5, 6], "": [5, 6], "includ": [5, 14, 18], "copi": 5, "unpack_task_request": 5, "unpack": 5, "value_spec": [5, 20], "spec": [5, 12, 20], "creat": [6, 7, 8, 9, 18], "list": [6, 8, 9, 18], "initi": 6, "entri": [6, 19], "anoth": [6, 7, 18], "append": 6, "onto": 6, "append_group": 6, "max_parallel": [6, 18], "return_except": 6, "new": [6, 18], "in_parallel": [6, 18, 19], "group": [6, 8, 9], "one": [6, 7, 14, 18], "other": 6, "number": [6, 12, 14, 18], "invok": [6, 20], "parallel": [6, 18], "caus": 6, "aggreg": [6, 18], "thrown": [6, 20], "instead": [6, 7], "appear": 6, "come": 6, "unord": 6, "more": [6, 15, 18], "effici": 6, "append_to": 6, "continue_if": 6, "condit": [6, 13], "continu": 6, "condition": 6, "add": [6, 18], "exception": [6, 18], "exception_task": 6, "finally_do": [6, 18], "finally_act": 6, "final": [6, 18], "pipeline_proto": 6, "get_destin": 6, "destin": [6, 7], "ingress": [6, 8, 9, 12], "all": [6, 11], "identifi": 6, "up": [6, 16, 18], "each": [6, 18, 19], "has_initial_paramet": 6, "ha": [6, 7, 14, 19], "inlin": 6, "is_inlin": 6, "mark": 6, "being": 6, "By": [6, 19], "accept": [6, 15], "share": [6, 18, 19], "parent": [6, 7, 18], "is_empti": 6, "test": [6, 15, 20], "empti": 6, "argument": [6, 18], "last": 6, "ad": [6, 19], "drop": 6, "set_task_default": 6, "thei": [6, 18, 20], "to_task_request": 6, "builtin": 6, "run_pipelin": 6, "valid": 6, "valueerror": [6, 20], "invalid": 6, "wait": 6, "automat": 6, "paus": [6, 8, 13], "point": [6, 14], "with_initi": [6, 18], "tupleofani": 6, "keyword": 6, "dict": [6, 9], "mapstringtoani": 6, "around": [7, 20], "when": [7, 8, 14, 15, 18, 19], "call": [7, 11, 18], "send_egress_messag": 7, "cancel_messag": 7, "contextualise_from": 7, "suppli": 7, "get_address": 7, "own": [7, 19], "form": 7, "typenam": 7, "get_caller_address": 7, "caller": [7, 15, 20], "get_caller_id": [7, 20], "get_namespac": 7, "get_original_caller_address": 7, "origin": [7, 8], "irrespect": 7, "self": 7, "get_original_caller_id": 7, "get_parent_pipeline_address": 7, "part": 7, "els": [7, 13, 18], "get_parent_pipeline_id": 7, "get_parent_task_address": 7, "get_parent_task_id": 7, "get_pipeline_address": 7, "get_pipeline_id": 7, "get_root_pipeline_address": 7, "top": 7, "most": [7, 15], "root": 7, "get_root_pipeline_id": 7, "differ": [7, 19], "nest": [7, 18], "get_task_id": 7, "get_worker_nam": 7, "safe_send_egress_messag": 7, "topic": [7, 8, 9, 12], "error_funct": 7, "due": [7, 14], "error": 7, "callabl": 7, "wa": [7, 8], "send_messag": 7, "target_id": 7, "target": [7, 12], "same": [7, 19], "behaviour": [7, 15, 18], "send_message_aft": 7, "some": [7, 13, 16], "timedelta": [7, 20], "task_nam": 7, "task_uid": 7, "uniqu": [7, 8, 9, 19], "Not": 7, "confus": 7, "ident": 7, "to_address_and_id": 7, "sdkaddress": 7, "string": [7, 14], "represent": 7, "sdk": 7, "kafka_broker_url": [8, 9], "request_top": [8, 9], "action_top": [8, 9], "reply_top": [8, 9], "group_id": 8, "kafka_properti": [8, 9], "kafka_consumer_properti": [8, 9], "kafka_producer_properti": [8, 9], "repli": [8, 9], "handl": 8, "dedic": 8, "thread": 8, "per": [8, 9], "so": [8, 15, 18, 20], "get_client": [8, 9], "prefer": 8, "instanti": 8, "directli": 8, "url": [8, 9], "kafka": [8, 9, 12], "broker": [8, 9, 12], "dictionari": [8, 9], "action_topt": [8, 9], "action": [8, 9, 12, 13, 17], "listen": [8, 9], "respons": [8, 9, 12], "consum": [8, 9], "subscrib": 8, "kafkaconsum": [8, 9], "kafkaproduc": [8, 9], "cancel_pipelin": 8, "pipeline_or_task": 8, "union": 8, "overrid": 8, "futur": 8, "indic": 8, "successfulli": 8, "get_request": 8, "get": 8, "previous": 8, "encapsul": 8, "get_result": 8, "get_statu": 8, "statu": [8, 14], "pause_pipelin": 8, "submit_async": [8, 12, 13, 15, 18, 19, 20], "unpause_pipelin": 8, "factori": 9, "memoiz": 9, "enumer": 10, "notify_emit_result": 11, "task_result_or_except": 11, "handler": [11, 14], "notify_task_finish": 11, "task_except": [11, 14], "is_pipelin": [11, 14], "notify_task_receiv": 11, "on_task_receiv": [11, 14], "notify_task_retri": 11, "retry_count": [11, 14], "notify_task_start": 11, "on_task_start": [11, 14], "on_emit_result": [11, 14], "on_task_finish": [11, 14], "on_task_retri": [11, 14], "A": [12, 20], "basic": 12, "involv": 12, "connect": 12, "plu": 12, "code": [12, 15, 17], "import": [12, 13, 15], "generic_work": 12, "gener": 12, "embedded_pipelin": 12, "cpu_work": 12, "def": [12, 13, 14, 15, 18, 19, 20], "do": [12, 18], "cpu": 12, "bound": 12, "work": [12, 15], "gpu_work": 12, "b": [12, 18], "requir": 12, "gpu": 12, "aio_work": 12, "c": [12, 18], "io": 12, "example_workflow": 12, "correspond": [12, 19], "follow": 12, "setup": [12, 15], "kind": 12, "v1": 12, "stateexpir": 12, "pt1m": 12, "iso": 12, "8601": 12, "eventsegress": 12, "eventstop": 12, "callbackdelaym": 12, "10": [12, 18], "callback": 12, "endpoint": 12, "v2": 12, "http": 12, "urlpathtempl": 12, "8085": 12, "9092": 12, "consumergroupid": 12, "cluster": 12, "startupposit": 12, "earliest": 12, "valuetyp": 12, "deliverysemant": 12, "exactli": 12, "onc": 12, "transactiontimeout": 12, "15min": 12, "appli": 13, "met": 13, "stateful_task": 13, "with_pause_pipelin": 13, "x": [13, 18, 19, 20], "y": [13, 18, 19, 20], "5": [13, 14, 18, 20], "variou": 14, "dure": 14, "execut": 14, "record": 14, "begin": 14, "go": 14, "time": 14, "either": [14, 18, 19, 20], "about": 14, "tasksexcept": 14, "ignor": 14, "progress": 14, "pipelinecr": 14, "caller_id": 14, "1": [14, 18], "caller_address": 14, "pipelineinfo": 14, "pipelinestatuschang": 14, "pipelinetasksskip": 14, "repeat": [14, 18], "taskinfo": 14, "pipeline_id": 14, "pipeline_address": 14, "root_pipeline_id": 14, "root_pipeline_address": 14, "4": [14, 18], "oneof": 14, "pipeline_cr": 14, "pipeline_status_chang": 14, "6": [14, 18], "pipeline_tasks_skip": 14, "7": 14, "These": 15, "can": [15, 16, 18, 19, 20], "enabl": 15, "disabl": 15, "must": 15, "deploi": 15, "In": [15, 18], "product": 15, "suitabl": 15, "environ": [15, 16], "interact": 15, "notebook": 15, "declar": [15, 18, 20], "fly": 15, "side": 15, "clearli": 15, "secur": 15, "consider": 15, "pickl": 15, "ensur": 15, "you": [15, 20], "trust": 15, "your": 15, "onli": 15, "good": [15, 18], "reason": 15, "On": 15, "inline_task": 15, "enable_inline_task": 15, "hello_world": 15, "hello": 15, "world": 15, "instal": 16, "pypi": 16, "pip": 16, "see": 16, "github": [16, 17], "repo": 16, "download": 16, "altern": 16, "avail": 16, "readi": 16, "made": 16, "imag": 16, "compris": 16, "demo": [16, 17], "applic": 16, "guid": 16, "spin": 16, "kubernet": 16, "api": 17, "write": 17, "compos": [17, 19], "apach": 17, "check": 17, "out": 17, "sourc": 17, "effect": 17, "extens": 17, "combin": 18, "averag": 18, "sum": 18, "len": 18, "permit": 18, "within": 18, "have": 18, "concurr": 18, "limit": 18, "semphor": 18, "larg": 18, "perform": 18, "case": 18, "possibl": 18, "split": 18, "multipl": [18, 20], "reduc": 18, "style": 18, "num_stag": 18, "across": 18, "access": 18, "subtract": [18, 20], "add_stat": 18, "15": 18, "caught": 18, "termin": 18, "unhandl": 18, "handle_error": 18, "It": 18, "than": 18, "d": 18, "step": 18, "regardless": 18, "success": 18, "put": 18, "clean": 18, "logic": 18, "previou": 18, "cleanup": 18, "consid": 18, "10000": 18, "To": 18, "wai": 18, "allow": 18, "dynam": 18, "workflow": 18, "featur": 18, "multiply_and_subtract": 18, "mult_a": 18, "mult_b": 18, "sub_c": 18, "add_posit": 18, "make_posit": 18, "0": 18, "count_to_100": 18, "check_result": 18, "100": 18, "isol": [18, 19], "between": 18, "child": 18, "done": 18, "assumpt": 18, "itself": 18, "would": 18, "rather": 18, "treat": 18, "black": 18, "box": 18, "henc": 18, "kept": 18, "independ": [18, 19], "overriden": 18, "sinc": 19, "inher": 19, "written": 19, "statefulli": 19, "therefor": 19, "its": 19, "enter": 19, "construct": 19, "memoised_multipli": 19, "get_stat": 19, "kei": 19, "f": [19, 20], "set_stat": 19, "calcul": 19, "memois": 19, "uuid4": 19, "trigger": 20, "retry_for": 20, "max_retri": 20, "exponential_back_off": 20, "unreliable_task": 20, "direct": 20, "indirect": 20, "task_using_context": 20, "me": 20}, "objects": {"statefun_tasks": [[4, 0, 1, "", "DefaultSerialiser"], [5, 0, 1, "", "FlinkTasks"], [6, 0, 1, "", "PipelineBuilder"], [7, 0, 1, "", "TaskContext"]], "statefun_tasks.DefaultSerialiser": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "deserialise_args_and_kwargs"], [4, 1, 1, "", "deserialise_request"], [4, 1, 1, "", "deserialise_result"], [4, 1, 1, "", "from_proto"], [4, 1, 1, "", "serialise_args_and_kwargs"], [4, 1, 1, "", "serialise_request"], [4, 1, 1, "", "serialise_result"], [4, 1, 1, "", "to_proto"]], "statefun_tasks.FlinkTasks": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "bind"], [5, 1, 1, "", "clone_task_request"], [5, 1, 1, "", "emit_result"], [5, 2, 1, "", "events"], [5, 1, 1, "", "extend"], [5, 1, 1, "", "fail"], [5, 1, 1, "", "get_task"], [5, 1, 1, "", "register"], [5, 1, 1, "", "run_async"], [5, 1, 1, "", "send"], [5, 1, 1, "", "send_result"], [5, 1, 1, "", "unpack_task_request"], [5, 1, 1, "", "value_specs"]], "statefun_tasks.PipelineBuilder": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "append"], [6, 1, 1, "", "append_group"], [6, 1, 1, "", "append_to"], [6, 1, 1, "", "continue_if"], [6, 1, 1, "", "continue_with"], [6, 1, 1, "", "exceptionally"], [6, 1, 1, "", "finally_do"], [6, 1, 1, "", "from_proto"], [6, 1, 1, "", "get_destination"], [6, 1, 1, "", "get_tasks"], [6, 2, 1, "", "has_initial_parameters"], [6, 2, 1, "", "id"], [6, 1, 1, "", "inline"], [6, 1, 1, "", "is_empty"], [6, 2, 1, "", "is_inline"], [6, 1, 1, "", "send"], [6, 1, 1, "", "set"], [6, 1, 1, "", "set_task_defaults"], [6, 1, 1, "", "to_proto"], [6, 1, 1, "", "to_task_request"], [6, 1, 1, "", "validate"], [6, 1, 1, "", "wait"], [6, 1, 1, "", "with_initial"]], "statefun_tasks.TaskContext": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "cancel_message"], [7, 1, 1, "", "contextualise_from"], [7, 1, 1, "", "get_address"], [7, 1, 1, "", "get_caller_address"], [7, 1, 1, "", "get_caller_id"], [7, 1, 1, "", "get_namespace"], [7, 1, 1, "", "get_original_caller_address"], [7, 1, 1, "", "get_original_caller_id"], [7, 1, 1, "", "get_parent_pipeline_address"], [7, 1, 1, "", "get_parent_pipeline_id"], [7, 1, 1, "", "get_parent_task_address"], [7, 1, 1, "", "get_parent_task_id"], [7, 1, 1, "", "get_pipeline_address"], [7, 1, 1, "", "get_pipeline_id"], [7, 1, 1, "", "get_root_pipeline_address"], [7, 1, 1, "", "get_root_pipeline_id"], [7, 1, 1, "", "get_task_id"], [7, 1, 1, "", "get_worker_name"], [7, 1, 1, "", "safe_send_egress_message"], [7, 1, 1, "", "send_egress_message"], [7, 1, 1, "", "send_message"], [7, 1, 1, "", "send_message_after"], [7, 2, 1, "", "task_name"], [7, 2, 1, "", "task_uid"], [7, 1, 1, "", "to_address_and_id"]], "statefun_tasks.client": [[8, 0, 1, "", "FlinkTasksClient"], [9, 0, 1, "", "FlinkTasksClientFactory"], [10, 0, 1, "", "TaskStatus"]], "statefun_tasks.client.FlinkTasksClient": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "cancel_pipeline"], [8, 1, 1, "", "cancel_pipeline_async"], [8, 1, 1, "", "get_request"], [8, 1, 1, "", "get_request_async"], [8, 1, 1, "", "get_result"], [8, 1, 1, "", "get_result_async"], [8, 1, 1, "", "get_status"], [8, 1, 1, "", "get_status_async"], [8, 1, 1, "", "pause_pipeline"], [8, 1, 1, "", "pause_pipeline_async"], [8, 2, 1, "", "serialiser"], [8, 1, 1, "", "submit"], [8, 1, 1, "", "submit_async"], [8, 1, 1, "", "unpause_pipeline"], [8, 1, 1, "", "unpause_pipeline_async"]], "statefun_tasks.client.FlinkTasksClientFactory": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_client"]], "statefun_tasks.client.TaskStatus": [[10, 1, 1, "", "__init__"]], "statefun_tasks.events": [[11, 0, 1, "", "EventHandlers"]], "statefun_tasks.events.EventHandlers": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "notify_emit_result"], [11, 1, 1, "", "notify_task_finished"], [11, 1, 1, "", "notify_task_received"], [11, 1, 1, "", "notify_task_retry"], [11, 1, 1, "", "notify_task_started"], [11, 1, 1, "", "on_emit_result"], [11, 1, 1, "", "on_task_finished"], [11, 1, 1, "", "on_task_received"], [11, 1, 1, "", "on_task_retry"], [11, 1, 1, "", "on_task_started"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"]}, "titleterms": {"action": 0, "queri": 0, "pipelin": [0, 14, 18], "statu": 0, "request": 0, "result": [0, 14], "flow": 0, "control": 0, "paus": 0, "resum": 0, "cancel": 0, "api": [1, 2, 3], "refer": 1, "worker": [2, 14], "client": 3, "defaultserialis": 4, "flinktask": 5, "pipelinebuild": 6, "taskcontext": 7, "flinktaskscli": 8, "flinktasksclientfactori": 9, "taskstatu": 10, "eventhandl": 11, "deploy": 12, "topologi": 12, "effect": 13, "event": 14, "On": 14, "task": [14, 15, 17, 18, 19, 20], "receiv": 14, "start": [14, 16], "retri": 14, "finish": 14, "emit": 14, "extens": 15, "inlin": [15, 18], "get": 16, "flink": 17, "concept": 17, "continu": 18, "fan": 18, "out": 18, "pass": 18, "state": [18, 19], "error": [18, 20], "handl": [18, 20], "set": 18, "initi": 18, "paramet": 18, "orchestr": 18, "composit": 18, "condit": 18, "execut": 18, "recurs": 18, "regist": 20, "call": 20, "access": 20, "context": 20}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Actions": [[0, "actions"]], "Querying": [[0, "querying"]], "Pipeline Status": [[0, "pipeline-status"]], "Pipeline Request": [[0, "pipeline-request"]], "Pipeline Result": [[0, "pipeline-result"]], "Flow Control": [[0, "flow-control"]], "Pausing & Resuming Pipelines": [[0, "pausing-resuming-pipelines"]], "Cancelling a Pipeline": [[0, "cancelling-a-pipeline"]], "API Reference": [[1, "api-reference"]], "Worker API": [[2, "worker-api"]], "Client API": [[3, "client-api"]], "DefaultSerialiser": [[4, "defaultserialiser"]], "FlinkTasks": [[5, "flinktasks"]], "PipelineBuilder": [[6, "pipelinebuilder"]], "TaskContext": [[7, "taskcontext"]], "FlinkTasksClient": [[8, "flinktasksclient"]], "FlinkTasksClientFactory": [[9, "flinktasksclientfactory"]], "TaskStatus": [[10, "taskstatus"]], "EventHandlers": [[11, "eventhandlers"]], "Deployment Topologies": [[12, "deployment-topologies"]], "Effects": [[13, "effects"]], "Events": [[14, "events"]], "Worker Events": [[14, "worker-events"]], "On Task Received": [[14, "on-task-received"]], "On Task Started": [[14, "on-task-started"]], "On Task Retry": [[14, "on-task-retry"]], "On Task Finished": [[14, "on-task-finished"]], "On Emit Result": [[14, "on-emit-result"]], "Pipeline Events": [[14, "pipeline-events"]], "Extensions": [[15, "extensions"]], "Inline Tasks": [[15, "inline-tasks"]], "Getting Started": [[16, "getting-started"]], "Flink Tasks": [[17, "flink-tasks"]], "Concepts": [[17, null]], "Pipelines": [[18, "pipelines"]], "Continuations": [[18, "continuations"]], "Fan out / Fan in": [[18, "fan-out-fan-in"]], "Passing State": [[18, "passing-state"]], "Error Handling": [[18, "error-handling"], [20, "error-handling"]], "Setting Initial Parameters": [[18, "setting-initial-parameters"]], "Orchestrator Tasks": [[18, "orchestrator-tasks"]], "Composition": [[18, "composition"]], "Conditional Execution": [[18, "conditional-execution"]], "Recursion": [[18, "recursion"]], "Inline Pipelines": [[18, "inline-pipelines"]], "Stateful Tasks": [[19, "stateful-tasks"]], "Tasks": [[20, "tasks"]], "Registering a Task": [[20, "registering-a-task"]], "Calling a Task": [[20, "calling-a-task"]], "Accessing the Context": [[20, "accessing-the-context"]]}, "indexentries": {"defaultserialiser (class in statefun_tasks)": [[4, "statefun_tasks.DefaultSerialiser"]], "__init__() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.__init__"]], "deserialise_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_args_and_kwargs"]], "deserialise_request() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_request"]], "deserialise_result() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_result"]], "from_proto() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.from_proto"]], "serialise_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_args_and_kwargs"]], "serialise_request() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_request"]], "serialise_result() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_result"]], "to_proto() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.to_proto"]], "flinktasks (class in statefun_tasks)": [[5, "statefun_tasks.FlinkTasks"]], "__init__() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.__init__"]], "bind() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.bind"]], "clone_task_request() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.clone_task_request"]], "emit_result() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.emit_result"]], "events (statefun_tasks.flinktasks property)": [[5, "statefun_tasks.FlinkTasks.events"]], "extend() (statefun_tasks.flinktasks static method)": [[5, "statefun_tasks.FlinkTasks.extend"]], "fail() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.fail"]], "get_task() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.get_task"]], "register() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.register"]], "run_async() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.run_async"]], "send() (statefun_tasks.flinktasks static method)": [[5, "statefun_tasks.FlinkTasks.send"]], "send_result() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.send_result"]], "unpack_task_request() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.unpack_task_request"]], "value_specs() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.value_specs"]], "pipelinebuilder (class in statefun_tasks)": [[6, "statefun_tasks.PipelineBuilder"]], "__init__() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.__init__"]], "append() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append"]], "append_group() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append_group"]], "append_to() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append_to"]], "continue_if() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.continue_if"]], "continue_with() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.continue_with"]], "exceptionally() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.exceptionally"]], "finally_do() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.finally_do"]], "from_proto() (statefun_tasks.pipelinebuilder static method)": [[6, "statefun_tasks.PipelineBuilder.from_proto"]], "get_destination() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.get_destination"]], "get_tasks() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.get_tasks"]], "has_initial_parameters (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.has_initial_parameters"]], "id (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.id"]], "inline() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.inline"]], "is_empty() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.is_empty"]], "is_inline (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.is_inline"]], "send() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.send"]], "set() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.set"]], "set_task_defaults() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.set_task_defaults"]], "to_proto() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_proto"]], "to_task_request() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_task_request"]], "validate() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.validate"]], "wait() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.wait"]], "with_initial() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.with_initial"]], "taskcontext (class in statefun_tasks)": [[7, "statefun_tasks.TaskContext"]], "__init__() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.__init__"]], "cancel_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.cancel_message"]], "contextualise_from() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.contextualise_from"]], "get_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_address"]], "get_caller_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_caller_address"]], "get_caller_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_caller_id"]], "get_namespace() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_namespace"]], "get_original_caller_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_original_caller_address"]], "get_original_caller_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_original_caller_id"]], "get_parent_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_pipeline_address"]], "get_parent_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_pipeline_id"]], "get_parent_task_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_task_address"]], "get_parent_task_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_task_id"]], "get_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_pipeline_address"]], "get_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_pipeline_id"]], "get_root_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_root_pipeline_address"]], "get_root_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_root_pipeline_id"]], "get_task_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_task_id"]], "get_worker_name() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_worker_name"]], "safe_send_egress_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.safe_send_egress_message"]], "send_egress_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_egress_message"]], "send_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_message"]], "send_message_after() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_message_after"]], "task_name (statefun_tasks.taskcontext property)": [[7, "statefun_tasks.TaskContext.task_name"]], "task_uid (statefun_tasks.taskcontext property)": [[7, "statefun_tasks.TaskContext.task_uid"]], "to_address_and_id() (statefun_tasks.taskcontext static method)": [[7, "statefun_tasks.TaskContext.to_address_and_id"]], "flinktasksclient (class in statefun_tasks.client)": [[8, "statefun_tasks.client.FlinkTasksClient"]], "__init__() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.__init__"]], "cancel_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.cancel_pipeline"]], "cancel_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.cancel_pipeline_async"]], "get_request() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_request"]], "get_request_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_request_async"]], "get_result() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_result"]], "get_result_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_result_async"]], "get_status() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_status"]], "get_status_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_status_async"]], "pause_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.pause_pipeline"]], "pause_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.pause_pipeline_async"]], "serialiser (statefun_tasks.client.flinktasksclient property)": [[8, "statefun_tasks.client.FlinkTasksClient.serialiser"]], "submit() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.submit"]], "submit_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.submit_async"]], "unpause_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.unpause_pipeline"]], "unpause_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.unpause_pipeline_async"]], "flinktasksclientfactory (class in statefun_tasks.client)": [[9, "statefun_tasks.client.FlinkTasksClientFactory"]], "__init__() (statefun_tasks.client.flinktasksclientfactory method)": [[9, "statefun_tasks.client.FlinkTasksClientFactory.__init__"]], "get_client() (statefun_tasks.client.flinktasksclientfactory static method)": [[9, "statefun_tasks.client.FlinkTasksClientFactory.get_client"]], "taskstatus (class in statefun_tasks.client)": [[10, "statefun_tasks.client.TaskStatus"]], "__init__() (statefun_tasks.client.taskstatus method)": [[10, "statefun_tasks.client.TaskStatus.__init__"]], "eventhandlers (class in statefun_tasks.events)": [[11, "statefun_tasks.events.EventHandlers"]], "__init__() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.__init__"]], "notify_emit_result() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_emit_result"]], "notify_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_finished"]], "notify_task_received() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_received"]], "notify_task_retry() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_retry"]], "notify_task_started() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_started"]], "on_emit_result() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_emit_result"]], "on_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_finished"]], "on_task_received() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_received"]], "on_task_retry() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_retry"]], "on_task_started() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_started"]]}})