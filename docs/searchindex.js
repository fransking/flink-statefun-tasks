Search.setIndex({"docnames": ["actions", "api", "api/flink_tasks", "api/flink_tasks_client", "api/generated/statefun_tasks.DefaultSerialiser", "api/generated/statefun_tasks.FlinkTasks", "api/generated/statefun_tasks.PipelineBuilder", "api/generated/statefun_tasks.TaskContext", "api/generated/statefun_tasks.client.FlinkTasksClient", "api/generated/statefun_tasks.client.FlinkTasksClientFactory", "api/generated/statefun_tasks.client.TaskStatus", "api/generated/statefun_tasks.events.EventHandlers", "deployment_topologies", "events", "extensions", "getting_started", "index", "intro", "pipelines", "stateful_tasks", "tasks", "tasks_vs_functions"], "filenames": ["actions.rst", "api.rst", "api/flink_tasks.rst", "api/flink_tasks_client.rst", "api/generated/statefun_tasks.DefaultSerialiser.rst", "api/generated/statefun_tasks.FlinkTasks.rst", "api/generated/statefun_tasks.PipelineBuilder.rst", "api/generated/statefun_tasks.TaskContext.rst", "api/generated/statefun_tasks.client.FlinkTasksClient.rst", "api/generated/statefun_tasks.client.FlinkTasksClientFactory.rst", "api/generated/statefun_tasks.client.TaskStatus.rst", "api/generated/statefun_tasks.events.EventHandlers.rst", "deployment_topologies.rst", "events.rst", "extensions.rst", "getting_started.rst", "index.rst", "intro.rst", "pipelines.rst", "stateful_tasks.rst", "tasks.rst", "tasks_vs_functions.rst"], "titles": ["Actions", "API Reference", "Worker API", "Client API", "DefaultSerialiser", "FlinkTasks", "PipelineBuilder", "TaskContext", "FlinkTasksClient", "FlinkTasksClientFactory", "TaskStatus", "EventHandlers", "Deployment Topologies", "Events", "Extensions", "Getting Started", "Flink Tasks", "Introduction", "Pipelines", "Stateful Tasks", "Tasks", "Tasks vs Functions"], "terms": {"ar": [0, 4, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21], "out": [0, 16], "band": 0, "oper": 0, "exist": 0, "enabl": [0, 14], "client": [0, 1, 8, 9, 10, 12, 14, 18, 19, 20], "fire": [0, 6], "forget": 0, "later": 0, "perform": [0, 12, 18], "some": [0, 7, 13, 15, 17, 21], "multipli": [0, 5, 18, 20, 21], "send": [0, 5, 6, 7, 12, 13, 14, 17, 18, 19, 20, 21], "3": [0, 18, 19, 20, 21], "2": [0, 18, 19, 20, 21], "continue_with": [0, 6, 12, 13, 17, 18], "divid": [0, 18], "submit": [0, 8, 9, 18, 21], "non": [0, 18], "block": 0, "await": [0, 12, 14, 17, 18, 19, 20], "get_status_async": [0, 8], "type": [0, 4, 5, 6, 7, 8, 9, 12, 13, 21], "taskstatu": [0, 1], "get_request_async": [0, 8], "taskrequest": [0, 4, 5, 6, 7, 8, 13], "get_result_async": [0, 8], "taskresult": [0, 4, 8], "mai": [0, 12, 14, 18, 19, 20, 21], "unpaus": [0, 8], "a_long_running_task": 0, "save": 0, "pause_pipeline_async": [0, 8], "piplin": 0, "like": [0, 18, 21], "befor": [0, 5, 13, 17], "task": [0, 4, 5, 6, 7, 8, 9, 11, 12, 15], "run": [0, 5, 12, 13, 17], "unpause_pipeline_async": [0, 8], "schedul": 0, "complet": [0, 5, 13], "cancel_pipeline_async": [0, 8], "worker": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 20], "flinktask": [1, 17], "taskcontext": [1, 5], "pipelinebuild": [1, 5, 8, 18, 19], "defaultserialis": [1, 5, 6, 7, 8, 9], "eventhandl": [1, 5], "flinktasksclientfactori": [1, 8], "flinktaskscli": [1, 9, 20], "class": [4, 5, 6, 7, 8, 9, 10, 11], "statefun_task": [4, 5, 6, 7, 8, 9, 10, 11, 14], "known_proto_typ": 4, "none": [4, 5, 6, 7, 8, 9, 13, 17, 18], "protobuf_convert": 4, "default": [4, 5, 6, 8, 9, 14, 18, 19], "protobuf": [4, 5, 6, 18], "serialis": [4, 5, 6, 7, 8, 9, 18], "flink": [4, 5, 6, 7, 8, 9, 12, 13, 15, 18, 19, 20], "paramet": [4, 5, 6, 7, 8, 9, 17, 20], "option": [4, 5, 6, 7, 8, 9, 14], "iter": [4, 6], "messag": [4, 5, 6, 7, 17, 18, 20, 21], "an": [4, 5, 6, 7, 10, 12, 13, 16, 17, 21], "arrai": [4, 17], "known": 4, "pack": 4, "insid": [4, 6], "ani": [4, 5, 6, 7, 18, 20], "__init__": [4, 5, 6, 7, 8, 9, 10, 11], "method": [4, 5, 6, 7, 8, 9, 11], "deserialise_args_and_kwarg": 4, "request": [4, 7, 8, 9, 12], "deserialis": [4, 6], "python": [4, 5, 6, 14, 15, 17, 20], "arg": [4, 5, 6, 18], "kwarg": [4, 5, 6, 18], "return": [4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21], "tupl": [4, 5, 6], "deserialise_request": 4, "task_request": [4, 5, 7, 11, 13], "dserialis": 4, "back": [4, 17, 20], "state": [4, 5, 6, 7, 13, 16, 20], "deserialise_result": 4, "task_result": [4, 11, 13], "result": [4, 5, 6, 8, 12, 14, 17, 18, 19, 20, 21], "from_proto": [4, 6], "proto": [4, 13], "convert": [4, 7], "from": [4, 5, 6, 7, 13, 14, 15, 17, 21], "valu": [4, 5, 7, 10, 17, 18], "static": [4, 5, 6, 7, 9], "merge_args_and_kwarg": 4, "task_args_and_kwarg": 4, "merg": 4, "pass": [4, 5, 6, 8, 9, 12, 13, 20], "explic": 4, "entri": [4, 6, 19], "pipelin": [4, 5, 6, 7, 8, 11, 12, 14, 16, 17, 19], "previou": [4, 18], "If": [4, 5, 7, 13, 21], "i": [4, 5, 6, 7, 8, 12, 13, 14, 16, 18, 19, 21], "unchang": 4, "argsandkwarg": 4, "serialise_args_and_kwarg": 4, "singl": [4, 6, 12, 18, 20], "alreadi": 4, "instanc": [4, 5, 6, 8], "otherwis": [4, 5, 6, 21], "serialise_request": 4, "retry_polici": [4, 5, 6, 20], "format": [4, 7], "retri": [4, 5, 6, 18, 20], "polici": [4, 5, 6], "serialise_result": 4, "invoc": [4, 20], "to_args_and_kwarg": 4, "unpack": [4, 5], "to_proto": [4, 6], "item": [4, 5], "possibli": 4, "unpack_respons": 4, "task_result_or_except": [4, 11], "taskexcept": 4, "provid": [4, 5], "input": [4, 5, 6, 21], "tupleofani": [4, 6], "union": [4, 8], "default_namespac": [5, 6, 17], "default_worker_nam": [5, 6, 17], "egress_type_nam": [5, 7, 17], "egress_message_max_s": [5, 7], "state_expir": 5, "implement": [5, 17, 18], "should": [5, 6, 18, 21], "instanti": [5, 8], "top": [5, 7], "your": [5, 14], "api": [5, 16, 17], "file": 5, "us": [5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20], "decor": [5, 6, 11, 14, 17, 19], "function": [5, 6, 12, 14, 16, 18, 19, 20], "expos": [5, 12], "str": [5, 7, 17, 19], "namespac": [5, 6, 7, 12, 19, 21], "under": 5, "map": [5, 8, 9, 18], "statefun": [5, 12, 15], "modul": [5, 12], "yaml": [5, 12], "name": [5, 6, 7, 12], "egress": [5, 7, 8, 9, 12, 17, 21], "maximum": [5, 6, 7], "size": [5, 7, 13, 18], "byte": [5, 7], "specifi": [5, 7], "attempt": [5, 7], "over": [5, 7, 13], "thi": [5, 6, 7, 8, 12, 13, 14, 17, 18], "rais": [5, 6, 7, 13, 18], "messagesizeexceed": [5, 7], "except": [5, 6, 7, 13, 17, 18, 20], "set": [5, 6, 7, 8, 9, 19, 20], "durat": 5, "after": [5, 7], "which": [5, 6, 7, 13, 17, 18], "expir": 5, "expire_after_cal": 5, "attribut": [5, 6, 7, 8, 10, 20, 21], "bind": [5, 6, 12, 14, 17, 18, 19, 20, 21], "worker_nam": [5, 6, 7, 12, 19], "with_stat": [5, 18], "fals": [5, 6, 13, 18], "is_fruit": [5, 6, 18], "true": [5, 6, 13, 17, 18, 19, 20, 21], "module_nam": 5, "with_context": [5, 18, 19], "display_nam": [5, 6], "task_id": [5, 6, 19], "place": [5, 17, 18], "retrypolici": [5, 13, 20], "throw": [5, 18], "bool": [5, 6], "whether": [5, 6, 8], "object": 5, "first": [5, 18], "second": [5, 20], "also": [5, 17, 18, 19, 21], "The": [5, 6, 7, 12, 13, 17, 18, 21], "produc": [5, 13], "fruit": [5, 6, 17, 18, 21], "simpli": 5, "address": [5, 7, 19, 21], "function_nam": 5, "contain": [5, 6], "context": [5, 7, 11, 13, 17, 19, 20, 21], "friendli": [5, 6], "fix": [5, 19], "id": [5, 6, 7, 8, 9, 19, 21], "order": 5, "make": [5, 6, 12, 17], "clone_task_request": 5, "copi": 5, "associ": [5, 7, 12], "caller": [5, 7, 13, 14, 17, 18, 20, 21], "detail": 5, "extract": 5, "necessari": 5, "param": [5, 6], "rtype": [5, 6], "properti": [5, 6, 7, 8, 9], "event": [5, 6, 11, 16], "extend": 5, "add": [5, 6, 18], "extens": [5, 16], "unsabl": 5, "fn": 5, "to_task": 5, "wrap": [5, 17], "addit": [5, 7, 8, 9], "async": [5, 8, 11, 12, 17, 20], "fail": [5, 7, 13], "task_input": 5, "ex": [5, 18], "delai": [5, 7, 17, 20], "cancellation_token": [5, 7], "failur": [5, 18], "incom": 5, "taskactionrequest": [5, 8], "cancel": [5, 7, 8], "token": [5, 7], "get_task": [5, 6], "task_typ": 5, "given": [5, 6, 19], "e": [5, 6, 7, 8, 9, 13, 17, 18], "g": [5, 6, 7, 8, 9, 13], "exampl": [5, 7, 8, 9, 12, 13, 15, 17, 20, 21], "regist": [5, 12], "fun": [5, 6], "wrapper": [5, 7, 18], "normal": 5, "you": [5, 14, 18, 21], "would": [5, 18], "instead": [5, 6, 7, 13, 21], "functool": 5, "here": 5, "register_builtin": 5, "built": 5, "__builtin": 5, "run_pipelin": [5, 6], "onli": [5, 12, 14], "want": 5, "own": [5, 7, 12, 18, 19], "pre": 5, "defin": 5, "partial": 5, "lambda": 5, "repres": 5, "run_async": [5, 17, 20], "func": 5, "builder": [5, 6], "send_result": 5, "ellipsi": [5, 6], "": [5, 6, 17], "includ": [5, 13, 18, 21], "unpack_task_request": 5, "creat": [6, 7, 8, 9, 18], "list": [6, 8, 9, 17, 18], "initi": 6, "anoth": [6, 7, 12, 18, 21], "append": [6, 17], "onto": 6, "append_group": 6, "max_parallel": [6, 18], "return_except": 6, "new": [6, 18], "in_parallel": [6, 17, 18, 19], "group": [6, 8, 9, 17], "one": [6, 7, 13, 17, 18], "other": [6, 12, 17, 21], "number": [6, 13, 18, 21], "invok": [6, 13, 20], "parallel": [6, 18], "caus": [6, 13], "aggreg": [6, 18], "thrown": [6, 20], "appear": 6, "append_to": 6, "continue_if": 6, "condit": 6, "continu": [6, 17], "condition": 6, "exception": [6, 13, 18], "exception_task": 6, "finally_do": [6, 18], "finally_act": 6, "final": [6, 18], "pipeline_proto": 6, "get_destin": 6, "destin": [6, 7], "ingress": [6, 8, 9, 12], "all": [6, 11, 12, 17], "identifi": 6, "up": [6, 12, 17, 18, 21], "each": [6, 12, 17, 18, 19], "has_initial_paramet": 6, "ha": [6, 7, 12, 13, 17, 19, 21], "inlin": 6, "is_inlin": 6, "mark": 6, "being": 6, "By": [6, 19], "accept": [6, 14, 17], "share": [6, 18, 19], "parent": [6, 7, 18], "is_empti": 6, "test": [6, 14, 17, 20, 21], "empti": 6, "argument": [6, 18], "last": 6, "ad": [6, 19], "drop": 6, "set_task_default": 6, "thei": [6, 13, 17, 18, 20], "to_pipelin": 6, "concretis": 6, "handler": [6, 11, 13], "to_task_request": 6, "builtin": 6, "valid": 6, "valueerror": [6, 20], "invalid": 6, "wait": [6, 17], "automat": 6, "paus": [6, 8, 13], "point": [6, 13], "with_initi": [6, 18], "keyword": 6, "dict": [6, 9], "mapstringtoani": 6, "around": [7, 17, 18], "when": [7, 8, 12, 13, 14, 18, 19], "call": [7, 11, 12, 17, 18, 21], "send_egress_messag": 7, "cancel_messag": 7, "contextualise_from": 7, "suppli": 7, "get_address": 7, "form": 7, "typenam": 7, "get_caller_address": 7, "get_caller_id": [7, 18], "get_namespac": 7, "get_parent_pipeline_address": 7, "part": [7, 13], "els": [7, 18], "get_parent_pipeline_id": 7, "get_parent_task_address": 7, "get_parent_task_id": 7, "get_pipeline_address": 7, "get_pipeline_id": 7, "get_root_pipeline_address": 7, "most": [7, 14], "root": 7, "get_root_pipeline_id": 7, "differ": [7, 12, 13, 19, 21], "nest": [7, 18], "get_task_id": 7, "get_worker_nam": 7, "safe_send_egress_messag": 7, "topic": [7, 8, 9, 12, 17, 21], "error_funct": 7, "due": [7, 13], "error": [7, 13, 17], "callabl": 7, "wa": [7, 8], "send_messag": 7, "target_id": 7, "target": 7, "same": [7, 17, 19, 21], "behaviour": [7, 14, 18], "send_message_aft": 7, "timedelta": [7, 20], "task_nam": 7, "task_uid": 7, "uniqu": [7, 8, 9, 19], "Not": 7, "confus": 7, "ident": 7, "to_address_and_id": 7, "sdkaddress": 7, "string": 7, "represent": 7, "sdk": 7, "kafka_broker_url": [8, 9], "request_top": [8, 9], "action_top": [8, 9], "reply_top": [8, 9], "group_id": 8, "kafka_properti": [8, 9], "kafka_consumer_properti": [8, 9], "kafka_producer_properti": [8, 9], "repli": [8, 9, 21], "handl": 8, "dedic": 8, "thread": 8, "per": [8, 9], "so": [8, 14, 17, 18], "get_client": [8, 9], "prefer": 8, "directli": 8, "url": [8, 9], "kafka": [8, 9, 17], "broker": [8, 9], "dictionari": [8, 9], "action_topt": [8, 9], "action": [8, 9, 16], "listen": [8, 9], "respons": [8, 9], "consum": [8, 9], "subscrib": 8, "kafkaconsum": [8, 9], "kafkaproduc": [8, 9], "cancel_pipelin": 8, "pipeline_or_task": 8, "overrid": 8, "futur": 8, "indic": 8, "successfulli": 8, "get_request": 8, "get": 8, "origin": 8, "previous": 8, "encapsul": 8, "get_result": 8, "get_statu": 8, "statu": [8, 11], "pause_pipelin": 8, "submit_async": [8, 12, 14, 18, 19, 20], "unpause_pipelin": 8, "factori": 9, "memoiz": 9, "enumer": 10, "notify_emit_result": 11, "notify_pipeline_cr": 11, "notify_pipeline_finish": 11, "notify_pipeline_status_chang": 11, "notify_pipeline_task_finish": 11, "notify_pipeline_tasks_skip": 11, "skipped_task": [11, 13], "notify_pipeline_task_skip": 11, "notify_task_finish": 11, "task_except": [11, 13], "is_pipelin": [11, 13], "notify_task_receiv": 11, "on_task_receiv": [11, 13], "notify_task_retri": 11, "retry_count": [11, 13], "notify_task_start": 11, "on_task_start": [11, 13], "on_emit_result": [11, 13], "on_pipeline_cr": [11, 13], "on_pipeline_finish": [11, 13], "on_pipeline_status_chang": [11, 13], "on_pipeline_task_finish": [11, 13], "on_pipeline_tasks_skip": [11, 13], "on_task_finish": [11, 13], "on_task_retri": [11, 13], "correspond": [12, 19, 21], "simplist": 12, "involv": 12, "connect": 12, "optim": 12, "where": [12, 13], "concern": 12, "sent": 12, "pick": [12, 21], "similarli": 12, "its": [12, 19], "becom": [12, 17], "orchestr": [12, 13, 17], "sub": 12, "logic": [12, 18, 21], "we": 12, "depict": 12, "b": [12, 13, 18], "c": [12, 13, 18], "realiti": 12, "p": 12, "act": 12, "resourc": 12, "constrain": 12, "impact": [12, 21], "sens": 12, "hive": 12, "off": 12, "our": [12, 17], "seper": 12, "cpu_work": 12, "gpu_work": 12, "aio_work": 12, "classif": 12, "work": [12, 14], "def": [12, 13, 14, 17, 18, 19, 20, 21], "do": [12, 18, 21], "cpu": 12, "bound": 12, "requir": 12, "gpu": 12, "io": 12, "pipeline_work": 12, "example_workflow": 12, "variou": 13, "dure": 13, "execut": 13, "These": [13, 14, 17], "can": [13, 14, 15, 17, 18, 19, 20], "track": 13, "time": 13, "length": 13, "etc": 13, "flow": 13, "circumst": 13, "interrupt": 13, "tasksexcept": 13, "For": [13, 17], "greater": 13, "than": [13, 18], "limit": [13, 18], "case": [13, 18], "reciev": 13, "record": 13, "begin": 13, "go": [13, 21], "either": [13, 18, 19, 20], "read": 13, "pipeline_st": 13, "pipelinest": 13, "reach": 13, "scenario": 13, "venu": 13, "k8": 13, "gener": [13, 17], "purpos": 13, "comput": 13, "grid": 13, "becaus": 13, "orphan": 13, "branch": 13, "jump": 13, "ignor": 13, "about": 13, "disabl": 14, "must": 14, "deploi": 14, "In": [14, 18, 21], "product": 14, "setup": 14, "more": [14, 18], "suitabl": 14, "environ": 14, "interact": 14, "notebook": 14, "declar": [14, 18], "fly": 14, "side": [14, 18], "clearli": 14, "secur": 14, "consider": 14, "pickl": 14, "code": [14, 16], "ensur": 14, "trust": 14, "good": [14, 18], "reason": 14, "On": 14, "inline_task": 14, "import": 14, "enable_inline_task": 14, "hello_world": 14, "hello": 14, "world": 14, "instal": 15, "pypi": 15, "pip": 15, "see": 15, "github": [15, 16], "repo": 15, "write": [16, 17], "compos": [16, 17, 19], "apach": [16, 17], "check": 16, "sourc": 16, "introduct": 16, "v": 16, "A": [17, 18], "lightweight": 17, "borrow": 17, "concept": 17, "celeri": 17, "allow": 17, "develop": 17, "base": 17, "workflow": 17, "chain": 17, "togeth": 17, "my": 17, "profession": 17, "life": 17, "distribut": 17, "typic": 17, "1": [17, 18, 21], "n": 17, "load": 17, "portfolio": 17, "stock": 17, "timeseri": 17, "histor": 17, "price": 17, "calcul": [17, 19], "standard": 17, "deviat": 17, "averag": [17, 18], "fairli": 17, "trivial": 17, "achiev": 17, "plain": 17, "old": 17, "app": 17, "load_timeseri": 17, "market": 17, "data": 17, "system": 17, "compute_std_dev": 17, "np": 17, "std": 17, "compute_averag": 17, "std_dev": 17, "mean": 17, "could": 17, "bt": 17, "l": 17, "daign": 17, "de": 17, "bp": 17, "sinc": [17, 19], "simpl": 17, "testabl": 17, "debugg": 17, "without": [17, 21], "have": [17, 18, 21], "spin": 17, "test_result": 17, "vod": 17, "let": 17, "revisit": 17, "try": 17, "_load_pric": 17, "as_typ": [17, 21], "storag": [17, 21], "len": [17, 18], "number_of_stock": 17, "avg": 17, "send_egress": [17, 21], "issu": 17, "alwai": 17, "It": [17, 18, 21], "longer": 17, "resus": 17, "cannot": 17, "standand": 17, "receiv": 17, "store": 17, "intermdi": 17, "them": 17, "outsid": 17, "better": 17, "approach": 17, "might": [17, 21], "central": 17, "keep": 17, "manag": 17, "compute_average_std_devs_of_timeseri": 17, "is_typ": 17, "stock_list": 17, "initial_cal": 17, "elif": 17, "focu": 17, "combin": [17, 18], "intuit": 17, "ordinari": [17, 21], "print": 17, "f": [17, 18, 19], "traceback": 17, "print_exc": 17, "4": 18, "5": [18, 20], "sum": 18, "permit": 18, "within": 18, "concurr": 18, "semphor": 18, "10": 18, "larg": 18, "possibl": 18, "split": 18, "multipl": [18, 20, 21], "reduc": 18, "style": 18, "num_stag": 18, "across": 18, "x": [18, 19, 20, 21], "y": [18, 19, 20, 21], "subtract": [18, 20], "add_stat": 18, "6": [18, 21], "15": 18, "task_using_context": 18, "me": 18, "caught": 18, "termin": 18, "unhandl": 18, "handle_error": 18, "d": 18, "step": 18, "regardless": 18, "success": 18, "put": 18, "clean": 18, "cleanup": 18, "consid": 18, "10000": 18, "repeat": 18, "To": 18, "wai": 18, "As": [18, 21], "well": 18, "construct": [18, 19], "support": 18, "follow": 18, "pattern": 18, "multiply_and_subtract": 18, "mult_a": 18, "mult_b": 18, "sub_c": 18, "add_posit": 18, "make_posit": 18, "0": [18, 21], "count_to_100": 18, "check_result": 18, "100": 18, "isol": [18, 19], "between": 18, "child": 18, "done": 18, "assumpt": 18, "itself": 18, "rather": 18, "treat": 18, "black": 18, "box": 18, "henc": 18, "kept": 18, "independ": [18, 19], "overriden": 18, "setup_st": 18, "_": 18, "return_st": 18, "create_child_pipelin": 18, "create_inline_child_pipelin": 18, "inher": 19, "written": [19, 21], "statefulli": 19, "therefor": 19, "enter": 19, "memoised_multipli": 19, "get_stat": 19, "kei": 19, "set_stat": 19, "memois": 19, "uuid4": 19, "spec": 20, "value_spec": 20, "trigger": 20, "retry_for": 20, "max_retri": 20, "exponential_back_off": 20, "unreliable_task": 20, "direct": [20, 21], "indirect": 20, "output": 21, "made": 21, "stateful_funct": 21, "mutat": 21, "outgo": 21, "two": 21, "look": 21, "stateful_multipli": 21, "two_numbers_typ": 21, "what": 21, "now": 21, "probabl": 21, "mayb": 21, "emit": 21, "clear": 21, "how": 21, "know": 21, "who": 21, "unit": 21, "self": 21, "assertequ": 21, "dummy_context": 21, "through": 21, "find": 21, "trade": 21, "abil": 21, "effect": 21, "favour": 21, "simplicti": 21}, "objects": {"statefun_tasks": [[4, 0, 1, "", "DefaultSerialiser"], [5, 0, 1, "", "FlinkTasks"], [6, 0, 1, "", "PipelineBuilder"], [7, 0, 1, "", "TaskContext"]], "statefun_tasks.DefaultSerialiser": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "deserialise_args_and_kwargs"], [4, 1, 1, "", "deserialise_request"], [4, 1, 1, "", "deserialise_result"], [4, 1, 1, "", "from_proto"], [4, 1, 1, "", "merge_args_and_kwargs"], [4, 1, 1, "", "serialise_args_and_kwargs"], [4, 1, 1, "", "serialise_request"], [4, 1, 1, "", "serialise_result"], [4, 1, 1, "", "to_args_and_kwargs"], [4, 1, 1, "", "to_proto"], [4, 1, 1, "", "unpack_response"]], "statefun_tasks.FlinkTasks": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "bind"], [5, 1, 1, "", "clone_task_request"], [5, 2, 1, "", "events"], [5, 1, 1, "", "extend"], [5, 1, 1, "", "fail"], [5, 1, 1, "", "get_task"], [5, 1, 1, "", "register"], [5, 1, 1, "", "register_builtin"], [5, 1, 1, "", "run_async"], [5, 1, 1, "", "send"], [5, 1, 1, "", "send_result"], [5, 1, 1, "", "unpack_task_request"]], "statefun_tasks.PipelineBuilder": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "append"], [6, 1, 1, "", "append_group"], [6, 1, 1, "", "append_to"], [6, 1, 1, "", "continue_if"], [6, 1, 1, "", "continue_with"], [6, 1, 1, "", "exceptionally"], [6, 1, 1, "", "finally_do"], [6, 1, 1, "", "from_proto"], [6, 1, 1, "", "get_destination"], [6, 1, 1, "", "get_tasks"], [6, 2, 1, "", "has_initial_parameters"], [6, 2, 1, "", "id"], [6, 1, 1, "", "inline"], [6, 1, 1, "", "is_empty"], [6, 2, 1, "", "is_inline"], [6, 1, 1, "", "send"], [6, 1, 1, "", "set"], [6, 1, 1, "", "set_task_defaults"], [6, 1, 1, "", "to_pipeline"], [6, 1, 1, "", "to_proto"], [6, 1, 1, "", "to_task_request"], [6, 1, 1, "", "validate"], [6, 1, 1, "", "wait"], [6, 1, 1, "", "with_initial"]], "statefun_tasks.TaskContext": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "cancel_message"], [7, 1, 1, "", "contextualise_from"], [7, 1, 1, "", "get_address"], [7, 1, 1, "", "get_caller_address"], [7, 1, 1, "", "get_caller_id"], [7, 1, 1, "", "get_namespace"], [7, 1, 1, "", "get_parent_pipeline_address"], [7, 1, 1, "", "get_parent_pipeline_id"], [7, 1, 1, "", "get_parent_task_address"], [7, 1, 1, "", "get_parent_task_id"], [7, 1, 1, "", "get_pipeline_address"], [7, 1, 1, "", "get_pipeline_id"], [7, 1, 1, "", "get_root_pipeline_address"], [7, 1, 1, "", "get_root_pipeline_id"], [7, 1, 1, "", "get_task_id"], [7, 1, 1, "", "get_worker_name"], [7, 1, 1, "", "safe_send_egress_message"], [7, 1, 1, "", "send_egress_message"], [7, 1, 1, "", "send_message"], [7, 1, 1, "", "send_message_after"], [7, 2, 1, "", "task_name"], [7, 2, 1, "", "task_uid"], [7, 1, 1, "", "to_address_and_id"]], "statefun_tasks.client": [[8, 0, 1, "", "FlinkTasksClient"], [9, 0, 1, "", "FlinkTasksClientFactory"], [10, 0, 1, "", "TaskStatus"]], "statefun_tasks.client.FlinkTasksClient": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "cancel_pipeline"], [8, 1, 1, "", "cancel_pipeline_async"], [8, 1, 1, "", "get_request"], [8, 1, 1, "", "get_request_async"], [8, 1, 1, "", "get_result"], [8, 1, 1, "", "get_result_async"], [8, 1, 1, "", "get_status"], [8, 1, 1, "", "get_status_async"], [8, 1, 1, "", "pause_pipeline"], [8, 1, 1, "", "pause_pipeline_async"], [8, 2, 1, "", "serialiser"], [8, 1, 1, "", "submit"], [8, 1, 1, "", "submit_async"], [8, 1, 1, "", "unpause_pipeline"], [8, 1, 1, "", "unpause_pipeline_async"]], "statefun_tasks.client.FlinkTasksClientFactory": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_client"]], "statefun_tasks.client.TaskStatus": [[10, 1, 1, "", "__init__"]], "statefun_tasks.events": [[11, 0, 1, "", "EventHandlers"]], "statefun_tasks.events.EventHandlers": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "notify_emit_result"], [11, 1, 1, "", "notify_pipeline_created"], [11, 1, 1, "", "notify_pipeline_finished"], [11, 1, 1, "", "notify_pipeline_status_changed"], [11, 1, 1, "", "notify_pipeline_task_finished"], [11, 1, 1, "", "notify_pipeline_tasks_skipped"], [11, 1, 1, "", "notify_task_finished"], [11, 1, 1, "", "notify_task_received"], [11, 1, 1, "", "notify_task_retry"], [11, 1, 1, "", "notify_task_started"], [11, 1, 1, "", "on_emit_result"], [11, 1, 1, "", "on_pipeline_created"], [11, 1, 1, "", "on_pipeline_finished"], [11, 1, 1, "", "on_pipeline_status_changed"], [11, 1, 1, "", "on_pipeline_task_finished"], [11, 1, 1, "", "on_pipeline_tasks_skipped"], [11, 1, 1, "", "on_task_finished"], [11, 1, 1, "", "on_task_received"], [11, 1, 1, "", "on_task_retry"], [11, 1, 1, "", "on_task_started"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"]}, "titleterms": {"action": 0, "queri": 0, "pipelin": [0, 13, 18], "statu": [0, 13], "request": 0, "result": [0, 13], "flow": 0, "control": 0, "paus": 0, "resum": 0, "cancel": 0, "api": [1, 2, 3], "refer": 1, "worker": 2, "client": 3, "defaultserialis": 4, "flinktask": 5, "pipelinebuild": 6, "taskcontext": 7, "flinktaskscli": 8, "flinktasksclientfactori": 9, "taskstatu": 10, "eventhandl": 11, "deploy": 12, "topologi": 12, "event": 13, "On": 13, "task": [13, 14, 16, 17, 18, 19, 20, 21], "receiv": 13, "start": [13, 15], "retri": 13, "finish": 13, "creat": 13, "chang": 13, "skip": 13, "emit": 13, "extens": 14, "inlin": [14, 18], "get": 15, "flink": [16, 17, 21], "about": 16, "introduct": 17, "what": 17, "i": 17, "motiv": 17, "state": [17, 18, 19, 21], "function": [17, 21], "continu": 18, "fan": 18, "out": 18, "pass": 18, "access": 18, "context": 18, "error": [18, 20], "handl": [18, 20], "set": 18, "initi": 18, "paramet": 18, "orchestr": 18, "composit": 18, "condit": 18, "execut": 18, "recurs": 18, "regist": 20, "call": 20, "v": 21, "comparison": 21, "python": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Actions": [[0, "actions"]], "Querying": [[0, "querying"]], "Pipeline Status": [[0, "pipeline-status"]], "Pipeline Request": [[0, "pipeline-request"]], "Pipeline Result": [[0, "pipeline-result"]], "Flow Control": [[0, "flow-control"]], "Pausing & Resuming Pipelines": [[0, "pausing-resuming-pipelines"]], "Cancelling a Pipeline": [[0, "cancelling-a-pipeline"]], "API Reference": [[1, "api-reference"]], "Worker API": [[2, "worker-api"]], "Client API": [[3, "client-api"]], "DefaultSerialiser": [[4, "defaultserialiser"]], "FlinkTasks": [[5, "flinktasks"]], "PipelineBuilder": [[6, "pipelinebuilder"]], "TaskContext": [[7, "taskcontext"]], "FlinkTasksClient": [[8, "flinktasksclient"]], "FlinkTasksClientFactory": [[9, "flinktasksclientfactory"]], "TaskStatus": [[10, "taskstatus"]], "EventHandlers": [[11, "eventhandlers"]], "Deployment Topologies": [[12, "deployment-topologies"]], "Events": [[13, "events"]], "On Task Received": [[13, "on-task-received"]], "On Task Started": [[13, "on-task-started"]], "On Task Retry": [[13, "on-task-retry"]], "On Task Finished": [[13, "on-task-finished"]], "On Pipeline Created": [[13, "on-pipeline-created"]], "On Pipeline Status Changed": [[13, "on-pipeline-status-changed"]], "On Pipeline Task Finished": [[13, "on-pipeline-task-finished"]], "On Pipeline Tasks Skipped": [[13, "on-pipeline-tasks-skipped"]], "On Pipeline Finished": [[13, "on-pipeline-finished"]], "On Emit Result": [[13, "on-emit-result"]], "Extensions": [[14, "extensions"]], "Inline Tasks": [[14, "inline-tasks"]], "Getting Started": [[15, "getting-started"]], "Flink Tasks": [[16, "flink-tasks"], [17, "flink-tasks"], [21, "flink-tasks"]], "About": [[16, null]], "Introduction": [[17, "introduction"]], "What is it?": [[17, "what-is-it"]], "Motivation": [[17, "motivation"]], "Flink Stateful Functions": [[17, "flink-stateful-functions"]], "Pipelines": [[18, "pipelines"]], "Continuations": [[18, "continuations"]], "Fan out / Fan in": [[18, "fan-out-fan-in"]], "Passing State": [[18, "passing-state"]], "Accessing the Context": [[18, "accessing-the-context"]], "Error Handling": [[18, "error-handling"], [20, "error-handling"]], "Setting Initial Parameters": [[18, "setting-initial-parameters"]], "Orchestrator Tasks": [[18, "orchestrator-tasks"]], "Composition": [[18, "composition"]], "Conditional Execution": [[18, "conditional-execution"]], "Recursion": [[18, "recursion"]], "Inline Pipelines": [[18, "inline-pipelines"]], "Stateful Tasks": [[19, "stateful-tasks"]], "Tasks": [[20, "tasks"]], "Registering a Task": [[20, "registering-a-task"]], "Calling a Task": [[20, "calling-a-task"]], "Tasks vs Functions": [[21, "tasks-vs-functions"]], "Stateful Functions": [[21, "stateful-functions"]], "Comparison with Python Functions": [[21, "comparison-with-python-functions"]]}, "indexentries": {"defaultserialiser (class in statefun_tasks)": [[4, "statefun_tasks.DefaultSerialiser"]], "__init__() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.__init__"]], "deserialise_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_args_and_kwargs"]], "deserialise_request() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_request"]], "deserialise_result() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_result"]], "from_proto() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.from_proto"]], "merge_args_and_kwargs() (statefun_tasks.defaultserialiser static method)": [[4, "statefun_tasks.DefaultSerialiser.merge_args_and_kwargs"]], "serialise_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_args_and_kwargs"]], "serialise_request() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_request"]], "serialise_result() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_result"]], "to_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.to_args_and_kwargs"]], "to_proto() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.to_proto"]], "unpack_response() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.unpack_response"]], "flinktasks (class in statefun_tasks)": [[5, "statefun_tasks.FlinkTasks"]], "__init__() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.__init__"]], "bind() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.bind"]], "clone_task_request() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.clone_task_request"]], "events (statefun_tasks.flinktasks property)": [[5, "statefun_tasks.FlinkTasks.events"]], "extend() (statefun_tasks.flinktasks static method)": [[5, "statefun_tasks.FlinkTasks.extend"]], "fail() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.fail"]], "get_task() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.get_task"]], "register() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.register"]], "register_builtin() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.register_builtin"]], "run_async() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.run_async"]], "send() (statefun_tasks.flinktasks static method)": [[5, "statefun_tasks.FlinkTasks.send"]], "send_result() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.send_result"]], "unpack_task_request() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.unpack_task_request"]], "pipelinebuilder (class in statefun_tasks)": [[6, "statefun_tasks.PipelineBuilder"]], "__init__() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.__init__"]], "append() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append"]], "append_group() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append_group"]], "append_to() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append_to"]], "continue_if() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.continue_if"]], "continue_with() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.continue_with"]], "exceptionally() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.exceptionally"]], "finally_do() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.finally_do"]], "from_proto() (statefun_tasks.pipelinebuilder static method)": [[6, "statefun_tasks.PipelineBuilder.from_proto"]], "get_destination() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.get_destination"]], "get_tasks() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.get_tasks"]], "has_initial_parameters (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.has_initial_parameters"]], "id (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.id"]], "inline() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.inline"]], "is_empty() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.is_empty"]], "is_inline (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.is_inline"]], "send() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.send"]], "set() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.set"]], "set_task_defaults() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.set_task_defaults"]], "to_pipeline() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_pipeline"]], "to_proto() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_proto"]], "to_task_request() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_task_request"]], "validate() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.validate"]], "wait() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.wait"]], "with_initial() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.with_initial"]], "taskcontext (class in statefun_tasks)": [[7, "statefun_tasks.TaskContext"]], "__init__() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.__init__"]], "cancel_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.cancel_message"]], "contextualise_from() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.contextualise_from"]], "get_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_address"]], "get_caller_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_caller_address"]], "get_caller_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_caller_id"]], "get_namespace() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_namespace"]], "get_parent_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_pipeline_address"]], "get_parent_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_pipeline_id"]], "get_parent_task_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_task_address"]], "get_parent_task_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_task_id"]], "get_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_pipeline_address"]], "get_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_pipeline_id"]], "get_root_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_root_pipeline_address"]], "get_root_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_root_pipeline_id"]], "get_task_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_task_id"]], "get_worker_name() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_worker_name"]], "safe_send_egress_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.safe_send_egress_message"]], "send_egress_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_egress_message"]], "send_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_message"]], "send_message_after() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_message_after"]], "task_name (statefun_tasks.taskcontext property)": [[7, "statefun_tasks.TaskContext.task_name"]], "task_uid (statefun_tasks.taskcontext property)": [[7, "statefun_tasks.TaskContext.task_uid"]], "to_address_and_id() (statefun_tasks.taskcontext static method)": [[7, "statefun_tasks.TaskContext.to_address_and_id"]], "flinktasksclient (class in statefun_tasks.client)": [[8, "statefun_tasks.client.FlinkTasksClient"]], "__init__() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.__init__"]], "cancel_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.cancel_pipeline"]], "cancel_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.cancel_pipeline_async"]], "get_request() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_request"]], "get_request_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_request_async"]], "get_result() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_result"]], "get_result_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_result_async"]], "get_status() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_status"]], "get_status_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_status_async"]], "pause_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.pause_pipeline"]], "pause_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.pause_pipeline_async"]], "serialiser (statefun_tasks.client.flinktasksclient property)": [[8, "statefun_tasks.client.FlinkTasksClient.serialiser"]], "submit() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.submit"]], "submit_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.submit_async"]], "unpause_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.unpause_pipeline"]], "unpause_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.unpause_pipeline_async"]], "flinktasksclientfactory (class in statefun_tasks.client)": [[9, "statefun_tasks.client.FlinkTasksClientFactory"]], "__init__() (statefun_tasks.client.flinktasksclientfactory method)": [[9, "statefun_tasks.client.FlinkTasksClientFactory.__init__"]], "get_client() (statefun_tasks.client.flinktasksclientfactory static method)": [[9, "statefun_tasks.client.FlinkTasksClientFactory.get_client"]], "taskstatus (class in statefun_tasks.client)": [[10, "statefun_tasks.client.TaskStatus"]], "__init__() (statefun_tasks.client.taskstatus method)": [[10, "statefun_tasks.client.TaskStatus.__init__"]], "eventhandlers (class in statefun_tasks.events)": [[11, "statefun_tasks.events.EventHandlers"]], "__init__() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.__init__"]], "notify_emit_result() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_emit_result"]], "notify_pipeline_created() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_pipeline_created"]], "notify_pipeline_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_pipeline_finished"]], "notify_pipeline_status_changed() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_pipeline_status_changed"]], "notify_pipeline_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_pipeline_task_finished"]], "notify_pipeline_tasks_skipped() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_pipeline_tasks_skipped"]], "notify_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_finished"]], "notify_task_received() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_received"]], "notify_task_retry() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_retry"]], "notify_task_started() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_started"]], "on_emit_result() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_emit_result"]], "on_pipeline_created() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_pipeline_created"]], "on_pipeline_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_pipeline_finished"]], "on_pipeline_status_changed() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_pipeline_status_changed"]], "on_pipeline_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_pipeline_task_finished"]], "on_pipeline_tasks_skipped() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_pipeline_tasks_skipped"]], "on_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_finished"]], "on_task_received() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_received"]], "on_task_retry() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_retry"]], "on_task_started() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_started"]]}})