Search.setIndex({"docnames": ["actions", "api", "api/flink_tasks", "api/flink_tasks_client", "api/generated/statefun_tasks.DefaultSerialiser", "api/generated/statefun_tasks.FlinkTasks", "api/generated/statefun_tasks.PipelineBuilder", "api/generated/statefun_tasks.TaskContext", "api/generated/statefun_tasks.client.FlinkTasksClient", "api/generated/statefun_tasks.client.FlinkTasksClientFactory", "api/generated/statefun_tasks.client.TaskStatus", "api/generated/statefun_tasks.events.EventHandlers", "deployment_topologies", "effects", "events", "extensions", "getting_started", "index", "intro", "pipelines", "stateful_tasks", "tasks", "tasks_vs_functions"], "filenames": ["actions.rst", "api.rst", "api/flink_tasks.rst", "api/flink_tasks_client.rst", "api/generated/statefun_tasks.DefaultSerialiser.rst", "api/generated/statefun_tasks.FlinkTasks.rst", "api/generated/statefun_tasks.PipelineBuilder.rst", "api/generated/statefun_tasks.TaskContext.rst", "api/generated/statefun_tasks.client.FlinkTasksClient.rst", "api/generated/statefun_tasks.client.FlinkTasksClientFactory.rst", "api/generated/statefun_tasks.client.TaskStatus.rst", "api/generated/statefun_tasks.events.EventHandlers.rst", "deployment_topologies.rst", "effects.rst", "events.rst", "extensions.rst", "getting_started.rst", "index.rst", "intro.rst", "pipelines.rst", "stateful_tasks.rst", "tasks.rst", "tasks_vs_functions.rst"], "titles": ["Actions", "API Reference", "Worker API", "Client API", "DefaultSerialiser", "FlinkTasks", "PipelineBuilder", "TaskContext", "FlinkTasksClient", "FlinkTasksClientFactory", "TaskStatus", "EventHandlers", "Deployment Topologies", "Effects", "Events", "Extensions", "Getting Started", "Flink Tasks", "Introduction", "Pipelines", "Stateful Tasks", "Tasks", "Tasks vs Functions"], "terms": {"ar": [0, 6, 8, 9, 15, 18, 19, 20, 21, 22], "out": [0, 17], "band": 0, "oper": 0, "exist": 0, "enabl": [0, 15], "client": [0, 1, 8, 9, 10, 12, 13, 15, 19, 20, 21], "fire": 0, "forget": 0, "later": 0, "perform": [0, 19], "some": [0, 7, 13, 14, 16, 18, 22], "multipli": [0, 5, 13, 19, 21, 22], "send": [0, 5, 6, 7, 12, 13, 15, 18, 19, 20, 21, 22], "3": [0, 12, 13, 19, 20, 21, 22], "2": [0, 13, 19, 20, 21, 22], "continue_with": [0, 6, 12, 13, 18, 19], "divid": [0, 13, 19], "submit": [0, 8, 9, 19, 22], "non": [0, 19], "block": 0, "await": [0, 12, 13, 15, 18, 19, 20, 21], "get_status_async": [0, 8], "type": [0, 4, 5, 6, 7, 8, 9, 12, 22], "taskstatu": [0, 1], "get_request_async": [0, 8], "taskrequest": [0, 4, 5, 6, 7, 8, 12, 14], "get_result_async": [0, 8], "taskresult": [0, 4, 8], "mai": [0, 13, 15, 19, 20, 21, 22], "unpaus": [0, 8], "a_long_running_task": 0, "save": 0, "pause_pipeline_async": [0, 8], "piplin": 0, "like": [0, 19, 22], "befor": [0, 5, 14, 18], "task": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16], "run": [0, 5, 14, 18], "unpause_pipeline_async": [0, 8], "schedul": 0, "complet": [0, 5], "cancel_pipeline_async": [0, 8], "worker": [1, 5, 6, 7, 8, 9, 12, 15, 18, 21], "flinktask": [1, 12, 18], "taskcontext": [1, 5], "pipelinebuild": [1, 5, 8, 19, 20], "defaultserialis": [1, 5, 6, 7, 8, 9], "eventhandl": [1, 5], "flinktasksclientfactori": [1, 8], "flinktaskscli": [1, 9, 21], "class": [4, 5, 6, 7, 8, 9, 10, 11], "statefun_task": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "known_proto_typ": 4, "none": [4, 5, 6, 7, 8, 9, 14, 18, 19], "protobuf_convert": 4, "default": [4, 5, 6, 8, 9, 12, 15, 19, 20], "protobuf": [4, 5, 6, 19], "serialis": [4, 5, 6, 7, 8, 9, 19], "flink": [4, 5, 6, 7, 8, 9, 12, 14, 16, 19, 20, 21], "paramet": [4, 5, 6, 7, 8, 9, 18, 21], "option": [4, 5, 6, 7, 8, 9, 15], "iter": [4, 6], "messag": [4, 5, 6, 7, 18, 19, 21, 22], "an": [4, 5, 6, 7, 10, 12, 14, 17, 18, 22], "arrai": [4, 18], "known": 4, "pack": 4, "insid": [4, 6], "ani": [4, 5, 6, 7, 19, 21], "__init__": [4, 5, 6, 7, 8, 9, 10, 11], "method": [4, 5, 6, 7, 8, 9, 11], "deserialise_args_and_kwarg": 4, "request": [4, 5, 7, 8, 9, 12], "deserialis": [4, 6], "python": [4, 5, 6, 15, 16, 18, 21], "arg": [4, 5, 6, 19], "kwarg": [4, 5, 6, 19], "return": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 21, 22], "tupl": [4, 5, 6], "deserialise_request": 4, "task_request": [4, 5, 7, 11, 14], "dserialis": 4, "back": [4, 6, 18, 21], "state": [4, 5, 6, 7, 12, 14, 17, 21], "deserialise_result": 4, "task_result": [4, 11, 14], "result": [4, 5, 6, 8, 12, 13, 15, 18, 19, 20, 21, 22], "from_proto": [4, 6], "proto": 4, "convert": [4, 7], "from": [4, 5, 6, 7, 12, 13, 15, 16, 18, 22], "valu": [4, 5, 7, 10, 18, 19], "serialise_args_and_kwarg": 4, "If": [4, 5, 7, 14, 22], "i": [4, 5, 6, 7, 8, 14, 15, 17, 19, 20, 22], "singl": [4, 6, 19, 21], "alreadi": 4, "instanc": [4, 5, 8], "otherwis": [4, 5, 6, 22], "argsandkwarg": 4, "serialise_request": 4, "retry_polici": [4, 5, 6, 21], "format": [4, 7], "retri": [4, 5, 6, 7, 19, 21], "polici": [4, 5, 6], "serialise_result": 4, "invoc": [4, 21], "to_proto": [4, 6], "item": [4, 5], "possibli": 4, "default_namespac": [5, 6, 12, 18], "default_worker_nam": [5, 6, 12, 18], "egress_type_nam": [5, 7, 12, 18], "egress_message_max_s": [5, 7], "state_expir": 5, "keep_task_st": 5, "fals": [5, 6, 14, 19], "embedded_pipeline_namespac": [5, 12], "embedded_pipeline_typ": [5, 12], "implement": [5, 18, 19], "should": [5, 6, 19, 22], "instanti": [5, 8], "top": [5, 7], "your": [5, 15], "api": [5, 17, 18], "file": 5, "us": [5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "decor": [5, 6, 11, 15, 18, 20], "function": [5, 6, 12, 15, 17, 19, 20, 21], "expos": 5, "str": [5, 7, 18, 20], "namespac": [5, 6, 7, 12, 20, 22], "under": 5, "map": [5, 8, 9, 19], "statefun": [5, 12, 16], "modul": [5, 12], "yaml": [5, 12], "name": [5, 6, 7], "egress": [5, 7, 8, 9, 12, 18, 22], "maximum": [5, 6, 7], "size": [5, 7, 14, 19], "byte": [5, 7], "specifi": [5, 7], "attempt": [5, 7], "over": [5, 7], "thi": [5, 6, 7, 8, 12, 13, 14, 15, 18, 19], "rais": [5, 6, 7, 14, 19], "messagesizeexceed": [5, 7], "except": [5, 6, 7, 14, 18, 19, 21], "set": [5, 6, 7, 8, 9, 20, 21], "durat": 5, "after": [5, 7, 13], "which": [5, 6, 7, 14, 18, 19], "expir": [5, 12], "expire_after_cal": 5, "whether": [5, 7, 8], "keep": [5, 18], "associ": [5, 7], "well": [5, 19], "pipelin": [5, 6, 7, 8, 12, 14, 15, 17, 18, 20], "embed": [5, 12], "forward": 5, "attribut": [5, 6, 7, 8, 10, 21, 22], "bind": [5, 6, 12, 13, 15, 18, 19, 20, 21, 22], "worker_nam": [5, 6, 7, 12, 20], "with_stat": [5, 19], "is_fruit": [5, 6, 19], "true": [5, 6, 14, 18, 19, 20, 21, 22], "module_nam": 5, "with_context": [5, 19, 20], "display_nam": [5, 6], "task_id": [5, 6, 20], "place": [5, 18, 19], "retrypolici": [5, 14, 21], "throw": [5, 19], "bool": [5, 6], "pass": [5, 6, 8, 9, 12, 14, 21], "object": 5, "first": [5, 13, 19], "second": [5, 21], "also": [5, 18, 19, 20, 22], "The": [5, 6, 7, 14, 18, 19, 22], "produc": 5, "fruit": [5, 18, 19, 22], "simpli": 5, "address": [5, 7, 20, 22], "function_nam": 5, "contain": [5, 6], "context": [5, 7, 11, 14, 18, 20, 21, 22], "friendli": [5, 6], "fix": [5, 20], "id": [5, 6, 7, 8, 9, 12, 20, 22], "order": 5, "make": [5, 6, 18], "clone_task_request": 5, "copi": 5, "caller": [5, 7, 14, 15, 18, 19, 21, 22], "detail": 5, "extract": 5, "necessari": 5, "param": [5, 6], "rtype": [5, 6], "properti": [5, 6, 7, 8, 9], "event": [5, 11, 12, 17], "static": [5, 6, 7, 9], "extend": 5, "add": [5, 6, 19], "extens": [5, 17], "unsabl": 5, "fn": 5, "to_task": 5, "wrap": [5, 18], "addit": [5, 7, 8, 9], "async": [5, 8, 11, 12, 18, 21], "fail": [5, 7, 14], "task_input": 5, "ex": [5, 19], "delai": [5, 7, 18, 21], "cancellation_token": [5, 7], "failur": [5, 19], "incom": 5, "taskactionrequest": [5, 8, 12], "cancel": [5, 7, 8], "token": [5, 7], "get_task": [5, 6], "task_typ": 5, "given": [5, 6, 20], "e": [5, 6, 7, 8, 9, 18, 19], "g": [5, 6, 7, 8, 9], "exampl": [5, 7, 8, 9, 12, 14, 16, 18, 21, 22], "regist": 5, "fun": [5, 6], "wrapper": [5, 7, 19], "normal": 5, "you": [5, 15, 19, 22], "would": [5, 19], "instead": [5, 6, 7, 14, 22], "functool": 5, "here": 5, "run_async": [5, 18, 21], "provid": 5, "input": [5, 6, 22], "func": 5, "builder": [5, 6], "send_result": 5, "ellipsi": [5, 6], "": [5, 6, 18], "includ": [5, 14, 19, 22], "unpack_task_request": 5, "unpack": 5, "creat": [6, 7, 8, 9, 19], "list": [6, 8, 9, 18, 19], "initi": 6, "entri": [6, 20], "anoth": [6, 7, 19, 22], "append": [6, 18], "onto": 6, "append_group": 6, "max_parallel": [6, 19], "return_except": 6, "is_unord": 6, "new": [6, 19], "in_parallel": [6, 18, 19, 20], "group": [6, 8, 9, 18], "one": [6, 7, 14, 18, 19], "other": [6, 18, 22], "number": [6, 12, 14, 19, 22], "invok": [6, 21], "parallel": [6, 19], "caus": 6, "aggreg": [6, 19], "thrown": [6, 21], "appear": 6, "come": 6, "unord": 6, "more": [6, 15, 19], "effici": 6, "append_to": 6, "continue_if": 6, "condit": 6, "continu": [6, 18], "condition": [6, 13], "exception": [6, 19], "exception_task": 6, "finally_do": [6, 19], "finally_act": 6, "final": [6, 19], "pipeline_proto": 6, "get_destin": 6, "destin": [6, 7], "ingress": [6, 8, 9, 12], "all": [6, 11, 18], "identifi": 6, "up": [6, 18, 19, 22], "each": [6, 18, 19, 20], "has_initial_paramet": 6, "ha": [6, 7, 14, 18, 20, 22], "inlin": 6, "is_inlin": 6, "mark": 6, "being": 6, "By": [6, 20], "accept": [6, 15, 18], "share": [6, 19, 20], "parent": [6, 7, 19], "is_empti": 6, "test": [6, 15, 18, 21, 22], "empti": 6, "argument": [6, 19], "last": 6, "ad": [6, 20], "drop": 6, "set_task_default": 6, "thei": [6, 18, 19, 21], "to_task_request": 6, "builtin": 6, "run_pipelin": 6, "valid": 6, "valueerror": [6, 21], "invalid": 6, "wait": [6, 18], "automat": 6, "paus": [6, 8], "point": [6, 14], "with_initi": [6, 19], "tupleofani": 6, "keyword": 6, "dict": [6, 9], "mapstringtoani": 6, "around": [7, 18, 19], "when": [7, 8, 14, 15, 19, 20], "call": [7, 11, 18, 19, 22], "send_egress_messag": 7, "cancel_messag": 7, "contextualise_from": 7, "suppli": 7, "get_address": 7, "own": [7, 19, 20], "form": 7, "typenam": 7, "get_caller_address": 7, "get_caller_id": [7, 19], "get_namespac": 7, "get_original_caller_address": 7, "origin": [7, 8], "irrespect": 7, "self": [7, 22], "get_original_caller_id": 7, "get_parent_pipeline_address": 7, "part": 7, "els": [7, 13, 19], "get_parent_pipeline_id": 7, "get_parent_task_address": 7, "get_parent_task_id": 7, "get_pipeline_address": 7, "get_pipeline_id": 7, "get_root_pipeline_address": 7, "most": [7, 15], "root": 7, "get_root_pipeline_id": 7, "differ": [7, 20, 22], "nest": [7, 19], "get_task_id": 7, "get_worker_nam": 7, "safe_send_egress_messag": 7, "topic": [7, 8, 9, 12, 18, 22], "error_funct": 7, "due": [7, 14], "error": [7, 14, 18], "callabl": 7, "wa": [7, 8], "send_messag": 7, "target_id": 7, "target": [7, 12], "same": [7, 18, 20, 22], "behaviour": [7, 15, 19], "send_message_aft": 7, "timedelta": [7, 21], "task_nam": 7, "task_uid": 7, "uniqu": [7, 8, 9, 20], "Not": 7, "confus": 7, "ident": 7, "to_address_and_id": 7, "sdkaddress": 7, "string": 7, "represent": 7, "sdk": 7, "kafka_broker_url": [8, 9], "request_top": [8, 9], "action_top": [8, 9], "reply_top": [8, 9], "group_id": 8, "kafka_properti": [8, 9], "kafka_consumer_properti": [8, 9], "kafka_producer_properti": [8, 9], "repli": [8, 9, 22], "handl": 8, "dedic": 8, "thread": 8, "per": [8, 9], "so": [8, 15, 18, 19], "get_client": [8, 9], "prefer": 8, "directli": 8, "url": [8, 9], "kafka": [8, 9, 12, 18], "broker": [8, 9], "dictionari": [8, 9], "action_topt": [8, 9], "action": [8, 9, 12, 17], "listen": [8, 9], "respons": [8, 9, 12], "consum": [8, 9], "subscrib": 8, "kafkaconsum": [8, 9], "kafkaproduc": [8, 9], "cancel_pipelin": 8, "pipeline_or_task": 8, "union": 8, "overrid": 8, "futur": 8, "indic": 8, "successfulli": 8, "get_request": 8, "get": 8, "previous": 8, "encapsul": 8, "get_result": 8, "get_statu": 8, "statu": 8, "pause_pipelin": 8, "submit_async": [8, 12, 13, 15, 19, 20, 21], "unpause_pipelin": 8, "factori": 9, "memoiz": 9, "enumer": 10, "notify_emit_result": 11, "task_result_or_except": 11, "handler": [11, 14], "notify_task_finish": 11, "task_except": [11, 14], "is_pipelin": [11, 14], "notify_task_receiv": 11, "on_task_receiv": [11, 14], "notify_task_retri": 11, "retry_count": [11, 14], "notify_task_start": 11, "on_task_start": [11, 14], "on_emit_result": [11, 14], "on_task_finish": [11, 14], "on_task_retri": [11, 14], "A": [12, 18, 19], "basic": 12, "involv": 12, "connect": 12, "plu": 12, "code": [12, 15, 17], "import": [12, 13, 15], "generic_work": 12, "gener": [12, 18], "emit": [12, 22], "embedded_pipelin": 12, "cpu_work": 12, "def": [12, 13, 14, 15, 18, 19, 20, 21, 22], "do": [12, 19, 22], "cpu": 12, "bound": 12, "work": [12, 15], "gpu_work": 12, "b": [12, 19], "requir": 12, "gpu": 12, "aio_work": 12, "c": [12, 19], "io": 12, "example_workflow": 12, "correspond": [12, 20, 22], "follow": [12, 19], "setup": [12, 15], "version": 12, "0": [12, 19, 22], "meta": 12, "remot": 12, "spec": [12, 21], "endpoint": 12, "kind": 12, "http": 12, "valuetyp": 12, "stateexpir": 12, "pt1m": 12, "iso": 12, "8601": 12, "eventsegress": 12, "eventstop": 12, "In": [13, 15, 19, 22], "case": [13, 14, 19], "appli": 13, "side": [13, 15, 19], "desir": 13, "can": [13, 14, 15, 16, 18, 19, 20, 21], "achiev": [13, 18], "stateful_task": 13, "with_pause_pipelin": 13, "x": [13, 19, 20, 21, 22], "y": [13, 19, 20, 21, 22], "5": [13, 19, 21], "variou": 14, "dure": 14, "execut": 14, "These": [14, 15, 18], "track": 14, "time": 14, "etc": 14, "flow": 14, "circumst": 14, "interrupt": 14, "tasksexcept": 14, "For": [14, 18], "greater": 14, "than": [14, 19], "limit": [14, 19], "reciev": 14, "record": 14, "begin": 14, "go": [14, 22], "either": [14, 19, 20, 21], "about": 14, "ignor": 14, "disabl": 15, "must": 15, "deploi": 15, "product": 15, "suitabl": 15, "environ": 15, "interact": 15, "notebook": 15, "declar": [15, 19], "fly": 15, "clearli": 15, "secur": 15, "consider": 15, "pickl": 15, "ensur": 15, "trust": 15, "onli": 15, "good": [15, 19], "reason": 15, "On": 15, "inline_task": 15, "enable_inline_task": 15, "hello_world": 15, "hello": 15, "world": 15, "instal": 16, "pypi": 16, "pip": 16, "see": 16, "github": [16, 17], "repo": 16, "write": [17, 18], "compos": [17, 18, 20], "apach": [17, 18], "check": 17, "sourc": 17, "introduct": 17, "v": 17, "effect": [17, 22], "lightweight": 18, "borrow": 18, "concept": 18, "celeri": 18, "allow": 18, "develop": 18, "base": 18, "workflow": 18, "chain": 18, "togeth": 18, "becom": 18, "my": 18, "profession": 18, "life": 18, "orchestr": 18, "distribut": 18, "typic": 18, "1": [18, 19, 22], "n": 18, "load": 18, "portfolio": 18, "stock": 18, "timeseri": 18, "histor": 18, "price": 18, "calcul": [18, 20], "standard": 18, "deviat": 18, "averag": [18, 19], "fairli": 18, "trivial": 18, "plain": 18, "old": 18, "app": 18, "load_timeseri": 18, "market": 18, "data": 18, "system": 18, "compute_std_dev": 18, "np": 18, "std": 18, "compute_averag": 18, "std_dev": 18, "mean": 18, "could": 18, "bt": 18, "l": 18, "daign": 18, "de": 18, "bp": 18, "sinc": [18, 20], "simpl": 18, "testabl": 18, "debugg": 18, "without": [18, 22], "have": [18, 19, 22], "spin": 18, "test_result": 18, "vod": 18, "let": 18, "revisit": 18, "our": 18, "try": 18, "_load_pric": 18, "as_typ": [18, 22], "storag": [18, 22], "len": [18, 19], "number_of_stock": 18, "avg": 18, "send_egress": [18, 22], "issu": 18, "alwai": 18, "It": [18, 19, 22], "longer": 18, "resus": 18, "cannot": 18, "standand": 18, "receiv": 18, "store": 18, "intermdi": 18, "them": 18, "outsid": 18, "better": 18, "approach": 18, "might": [18, 22], "central": 18, "manag": 18, "compute_average_std_devs_of_timeseri": 18, "is_typ": 18, "stock_list": 18, "initial_cal": 18, "elif": 18, "focu": 18, "combin": [18, 19], "intuit": 18, "ordinari": [18, 22], "print": 18, "f": [18, 19, 20], "traceback": 18, "print_exc": 18, "4": 19, "sum": 19, "permit": 19, "within": 19, "concurr": 19, "semphor": 19, "10": 19, "larg": 19, "possibl": 19, "split": 19, "multipl": [19, 21, 22], "reduc": 19, "style": 19, "num_stag": 19, "across": 19, "subtract": [19, 21], "add_stat": 19, "6": [19, 22], "15": 19, "task_using_context": 19, "me": 19, "caught": 19, "termin": 19, "unhandl": 19, "handle_error": 19, "d": 19, "step": 19, "regardless": 19, "success": 19, "put": 19, "clean": 19, "logic": [19, 22], "previou": 19, "cleanup": 19, "consid": 19, "10000": 19, "repeat": 19, "To": 19, "wai": 19, "As": [19, 22], "construct": [19, 20], "support": 19, "pattern": 19, "multiply_and_subtract": 19, "mult_a": 19, "mult_b": 19, "sub_c": 19, "add_posit": 19, "make_posit": 19, "count_to_100": 19, "check_result": 19, "100": 19, "isol": [19, 20], "between": 19, "child": 19, "done": 19, "assumpt": 19, "itself": 19, "rather": 19, "treat": 19, "black": 19, "box": 19, "henc": 19, "kept": 19, "independ": [19, 20], "overriden": 19, "setup_st": 19, "_": 19, "return_st": 19, "create_child_pipelin": 19, "create_inline_child_pipelin": 19, "inher": 20, "written": [20, 22], "statefulli": 20, "therefor": 20, "its": 20, "enter": 20, "memoised_multipli": 20, "get_stat": 20, "kei": 20, "set_stat": 20, "memois": 20, "uuid4": 20, "value_spec": 21, "trigger": 21, "retry_for": 21, "max_retri": 21, "exponential_back_off": 21, "unreliable_task": 21, "direct": [21, 22], "indirect": 21, "output": 22, "made": 22, "stateful_funct": 22, "mutat": 22, "outgo": 22, "two": 22, "look": 22, "stateful_multipli": 22, "two_numbers_typ": 22, "what": 22, "now": 22, "probabl": 22, "mayb": 22, "clear": 22, "how": 22, "know": 22, "who": 22, "impact": 22, "unit": 22, "assertequ": 22, "dummy_context": 22, "pick": 22, "through": 22, "find": 22, "trade": 22, "abil": 22, "favour": 22, "simplicti": 22}, "objects": {"statefun_tasks": [[4, 0, 1, "", "DefaultSerialiser"], [5, 0, 1, "", "FlinkTasks"], [6, 0, 1, "", "PipelineBuilder"], [7, 0, 1, "", "TaskContext"]], "statefun_tasks.DefaultSerialiser": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "deserialise_args_and_kwargs"], [4, 1, 1, "", "deserialise_request"], [4, 1, 1, "", "deserialise_result"], [4, 1, 1, "", "from_proto"], [4, 1, 1, "", "serialise_args_and_kwargs"], [4, 1, 1, "", "serialise_request"], [4, 1, 1, "", "serialise_result"], [4, 1, 1, "", "to_proto"]], "statefun_tasks.FlinkTasks": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "bind"], [5, 1, 1, "", "clone_task_request"], [5, 2, 1, "", "events"], [5, 1, 1, "", "extend"], [5, 1, 1, "", "fail"], [5, 1, 1, "", "get_task"], [5, 1, 1, "", "register"], [5, 1, 1, "", "run_async"], [5, 1, 1, "", "send"], [5, 1, 1, "", "send_result"], [5, 1, 1, "", "unpack_task_request"]], "statefun_tasks.PipelineBuilder": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "append"], [6, 1, 1, "", "append_group"], [6, 1, 1, "", "append_to"], [6, 1, 1, "", "continue_if"], [6, 1, 1, "", "continue_with"], [6, 1, 1, "", "exceptionally"], [6, 1, 1, "", "finally_do"], [6, 1, 1, "", "from_proto"], [6, 1, 1, "", "get_destination"], [6, 1, 1, "", "get_tasks"], [6, 2, 1, "", "has_initial_parameters"], [6, 2, 1, "", "id"], [6, 1, 1, "", "inline"], [6, 1, 1, "", "is_empty"], [6, 2, 1, "", "is_inline"], [6, 1, 1, "", "send"], [6, 1, 1, "", "set"], [6, 1, 1, "", "set_task_defaults"], [6, 1, 1, "", "to_proto"], [6, 1, 1, "", "to_task_request"], [6, 1, 1, "", "validate"], [6, 1, 1, "", "wait"], [6, 1, 1, "", "with_initial"]], "statefun_tasks.TaskContext": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "cancel_message"], [7, 1, 1, "", "contextualise_from"], [7, 1, 1, "", "get_address"], [7, 1, 1, "", "get_caller_address"], [7, 1, 1, "", "get_caller_id"], [7, 1, 1, "", "get_namespace"], [7, 1, 1, "", "get_original_caller_address"], [7, 1, 1, "", "get_original_caller_id"], [7, 1, 1, "", "get_parent_pipeline_address"], [7, 1, 1, "", "get_parent_pipeline_id"], [7, 1, 1, "", "get_parent_task_address"], [7, 1, 1, "", "get_parent_task_id"], [7, 1, 1, "", "get_pipeline_address"], [7, 1, 1, "", "get_pipeline_id"], [7, 1, 1, "", "get_root_pipeline_address"], [7, 1, 1, "", "get_root_pipeline_id"], [7, 1, 1, "", "get_task_id"], [7, 1, 1, "", "get_worker_name"], [7, 1, 1, "", "safe_send_egress_message"], [7, 1, 1, "", "send_egress_message"], [7, 1, 1, "", "send_message"], [7, 1, 1, "", "send_message_after"], [7, 2, 1, "", "task_name"], [7, 2, 1, "", "task_uid"], [7, 1, 1, "", "to_address_and_id"]], "statefun_tasks.client": [[8, 0, 1, "", "FlinkTasksClient"], [9, 0, 1, "", "FlinkTasksClientFactory"], [10, 0, 1, "", "TaskStatus"]], "statefun_tasks.client.FlinkTasksClient": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "cancel_pipeline"], [8, 1, 1, "", "cancel_pipeline_async"], [8, 1, 1, "", "get_request"], [8, 1, 1, "", "get_request_async"], [8, 1, 1, "", "get_result"], [8, 1, 1, "", "get_result_async"], [8, 1, 1, "", "get_status"], [8, 1, 1, "", "get_status_async"], [8, 1, 1, "", "pause_pipeline"], [8, 1, 1, "", "pause_pipeline_async"], [8, 2, 1, "", "serialiser"], [8, 1, 1, "", "submit"], [8, 1, 1, "", "submit_async"], [8, 1, 1, "", "unpause_pipeline"], [8, 1, 1, "", "unpause_pipeline_async"]], "statefun_tasks.client.FlinkTasksClientFactory": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_client"]], "statefun_tasks.client.TaskStatus": [[10, 1, 1, "", "__init__"]], "statefun_tasks.events": [[11, 0, 1, "", "EventHandlers"]], "statefun_tasks.events.EventHandlers": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "notify_emit_result"], [11, 1, 1, "", "notify_task_finished"], [11, 1, 1, "", "notify_task_received"], [11, 1, 1, "", "notify_task_retry"], [11, 1, 1, "", "notify_task_started"], [11, 1, 1, "", "on_emit_result"], [11, 1, 1, "", "on_task_finished"], [11, 1, 1, "", "on_task_received"], [11, 1, 1, "", "on_task_retry"], [11, 1, 1, "", "on_task_started"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"]}, "titleterms": {"action": 0, "queri": 0, "pipelin": [0, 13, 19], "statu": 0, "request": 0, "result": [0, 14], "flow": 0, "control": 0, "paus": [0, 13], "resum": 0, "cancel": 0, "api": [1, 2, 3], "refer": 1, "worker": 2, "client": 3, "defaultserialis": 4, "flinktask": 5, "pipelinebuild": 6, "taskcontext": 7, "flinktaskscli": 8, "flinktasksclientfactori": 9, "taskstatu": 10, "eventhandl": 11, "deploy": 12, "topologi": 12, "effect": 13, "event": 14, "On": 14, "task": [14, 15, 17, 18, 19, 20, 21, 22], "receiv": 14, "start": [14, 16], "retri": 14, "finish": 14, "emit": 14, "extens": 15, "inlin": [15, 19], "get": 16, "flink": [17, 18, 22], "about": 17, "introduct": 18, "what": 18, "i": 18, "motiv": 18, "state": [18, 19, 20, 22], "function": [18, 22], "continu": 19, "fan": 19, "out": 19, "pass": 19, "access": 19, "context": 19, "error": [19, 21], "handl": [19, 21], "set": 19, "initi": 19, "paramet": 19, "orchestr": 19, "composit": 19, "condit": 19, "execut": 19, "recurs": 19, "regist": 21, "call": 21, "v": 22, "comparison": 22, "python": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Actions": [[0, "actions"]], "Querying": [[0, "querying"]], "Pipeline Status": [[0, "pipeline-status"]], "Pipeline Request": [[0, "pipeline-request"]], "Pipeline Result": [[0, "pipeline-result"]], "Flow Control": [[0, "flow-control"]], "Pausing & Resuming Pipelines": [[0, "pausing-resuming-pipelines"]], "Cancelling a Pipeline": [[0, "cancelling-a-pipeline"]], "API Reference": [[1, "api-reference"]], "Worker API": [[2, "worker-api"]], "Client API": [[3, "client-api"]], "DefaultSerialiser": [[4, "defaultserialiser"]], "FlinkTasks": [[5, "flinktasks"]], "PipelineBuilder": [[6, "pipelinebuilder"]], "TaskContext": [[7, "taskcontext"]], "FlinkTasksClient": [[8, "flinktasksclient"]], "FlinkTasksClientFactory": [[9, "flinktasksclientfactory"]], "TaskStatus": [[10, "taskstatus"]], "EventHandlers": [[11, "eventhandlers"]], "Deployment Topologies": [[12, "deployment-topologies"]], "Effects": [[13, "effects"]], "Pausing a Pipeline": [[13, "pausing-a-pipeline"]], "Events": [[14, "events"]], "On Task Received": [[14, "on-task-received"]], "On Task Started": [[14, "on-task-started"]], "On Task Retry": [[14, "on-task-retry"]], "On Task Finished": [[14, "on-task-finished"]], "On Emit Result": [[14, "on-emit-result"]], "Extensions": [[15, "extensions"]], "Inline Tasks": [[15, "inline-tasks"]], "Getting Started": [[16, "getting-started"]], "Flink Tasks": [[17, "flink-tasks"], [18, "flink-tasks"], [22, "flink-tasks"]], "About": [[17, null]], "Introduction": [[18, "introduction"]], "What is it?": [[18, "what-is-it"]], "Motivation": [[18, "motivation"]], "Flink Stateful Functions": [[18, "flink-stateful-functions"]], "Pipelines": [[19, "pipelines"]], "Continuations": [[19, "continuations"]], "Fan out / Fan in": [[19, "fan-out-fan-in"]], "Passing State": [[19, "passing-state"]], "Accessing the Context": [[19, "accessing-the-context"]], "Error Handling": [[19, "error-handling"], [21, "error-handling"]], "Setting Initial Parameters": [[19, "setting-initial-parameters"]], "Orchestrator Tasks": [[19, "orchestrator-tasks"]], "Composition": [[19, "composition"]], "Conditional Execution": [[19, "conditional-execution"]], "Recursion": [[19, "recursion"]], "Inline Pipelines": [[19, "inline-pipelines"]], "Stateful Tasks": [[20, "stateful-tasks"]], "Tasks": [[21, "tasks"]], "Registering a Task": [[21, "registering-a-task"]], "Calling a Task": [[21, "calling-a-task"]], "Tasks vs Functions": [[22, "tasks-vs-functions"]], "Stateful Functions": [[22, "stateful-functions"]], "Comparison with Python Functions": [[22, "comparison-with-python-functions"]]}, "indexentries": {"defaultserialiser (class in statefun_tasks)": [[4, "statefun_tasks.DefaultSerialiser"]], "__init__() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.__init__"]], "deserialise_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_args_and_kwargs"]], "deserialise_request() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_request"]], "deserialise_result() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.deserialise_result"]], "from_proto() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.from_proto"]], "serialise_args_and_kwargs() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_args_and_kwargs"]], "serialise_request() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_request"]], "serialise_result() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.serialise_result"]], "to_proto() (statefun_tasks.defaultserialiser method)": [[4, "statefun_tasks.DefaultSerialiser.to_proto"]], "flinktasks (class in statefun_tasks)": [[5, "statefun_tasks.FlinkTasks"]], "__init__() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.__init__"]], "bind() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.bind"]], "clone_task_request() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.clone_task_request"]], "events (statefun_tasks.flinktasks property)": [[5, "statefun_tasks.FlinkTasks.events"]], "extend() (statefun_tasks.flinktasks static method)": [[5, "statefun_tasks.FlinkTasks.extend"]], "fail() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.fail"]], "get_task() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.get_task"]], "register() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.register"]], "run_async() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.run_async"]], "send() (statefun_tasks.flinktasks static method)": [[5, "statefun_tasks.FlinkTasks.send"]], "send_result() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.send_result"]], "unpack_task_request() (statefun_tasks.flinktasks method)": [[5, "statefun_tasks.FlinkTasks.unpack_task_request"]], "pipelinebuilder (class in statefun_tasks)": [[6, "statefun_tasks.PipelineBuilder"]], "__init__() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.__init__"]], "append() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append"]], "append_group() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append_group"]], "append_to() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.append_to"]], "continue_if() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.continue_if"]], "continue_with() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.continue_with"]], "exceptionally() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.exceptionally"]], "finally_do() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.finally_do"]], "from_proto() (statefun_tasks.pipelinebuilder static method)": [[6, "statefun_tasks.PipelineBuilder.from_proto"]], "get_destination() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.get_destination"]], "get_tasks() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.get_tasks"]], "has_initial_parameters (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.has_initial_parameters"]], "id (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.id"]], "inline() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.inline"]], "is_empty() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.is_empty"]], "is_inline (statefun_tasks.pipelinebuilder property)": [[6, "statefun_tasks.PipelineBuilder.is_inline"]], "send() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.send"]], "set() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.set"]], "set_task_defaults() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.set_task_defaults"]], "to_proto() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_proto"]], "to_task_request() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.to_task_request"]], "validate() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.validate"]], "wait() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.wait"]], "with_initial() (statefun_tasks.pipelinebuilder method)": [[6, "statefun_tasks.PipelineBuilder.with_initial"]], "taskcontext (class in statefun_tasks)": [[7, "statefun_tasks.TaskContext"]], "__init__() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.__init__"]], "cancel_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.cancel_message"]], "contextualise_from() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.contextualise_from"]], "get_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_address"]], "get_caller_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_caller_address"]], "get_caller_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_caller_id"]], "get_namespace() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_namespace"]], "get_original_caller_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_original_caller_address"]], "get_original_caller_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_original_caller_id"]], "get_parent_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_pipeline_address"]], "get_parent_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_pipeline_id"]], "get_parent_task_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_task_address"]], "get_parent_task_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_parent_task_id"]], "get_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_pipeline_address"]], "get_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_pipeline_id"]], "get_root_pipeline_address() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_root_pipeline_address"]], "get_root_pipeline_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_root_pipeline_id"]], "get_task_id() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_task_id"]], "get_worker_name() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.get_worker_name"]], "safe_send_egress_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.safe_send_egress_message"]], "send_egress_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_egress_message"]], "send_message() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_message"]], "send_message_after() (statefun_tasks.taskcontext method)": [[7, "statefun_tasks.TaskContext.send_message_after"]], "task_name (statefun_tasks.taskcontext property)": [[7, "statefun_tasks.TaskContext.task_name"]], "task_uid (statefun_tasks.taskcontext property)": [[7, "statefun_tasks.TaskContext.task_uid"]], "to_address_and_id() (statefun_tasks.taskcontext static method)": [[7, "statefun_tasks.TaskContext.to_address_and_id"]], "flinktasksclient (class in statefun_tasks.client)": [[8, "statefun_tasks.client.FlinkTasksClient"]], "__init__() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.__init__"]], "cancel_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.cancel_pipeline"]], "cancel_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.cancel_pipeline_async"]], "get_request() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_request"]], "get_request_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_request_async"]], "get_result() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_result"]], "get_result_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_result_async"]], "get_status() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_status"]], "get_status_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.get_status_async"]], "pause_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.pause_pipeline"]], "pause_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.pause_pipeline_async"]], "serialiser (statefun_tasks.client.flinktasksclient property)": [[8, "statefun_tasks.client.FlinkTasksClient.serialiser"]], "submit() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.submit"]], "submit_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.submit_async"]], "unpause_pipeline() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.unpause_pipeline"]], "unpause_pipeline_async() (statefun_tasks.client.flinktasksclient method)": [[8, "statefun_tasks.client.FlinkTasksClient.unpause_pipeline_async"]], "flinktasksclientfactory (class in statefun_tasks.client)": [[9, "statefun_tasks.client.FlinkTasksClientFactory"]], "__init__() (statefun_tasks.client.flinktasksclientfactory method)": [[9, "statefun_tasks.client.FlinkTasksClientFactory.__init__"]], "get_client() (statefun_tasks.client.flinktasksclientfactory static method)": [[9, "statefun_tasks.client.FlinkTasksClientFactory.get_client"]], "taskstatus (class in statefun_tasks.client)": [[10, "statefun_tasks.client.TaskStatus"]], "__init__() (statefun_tasks.client.taskstatus method)": [[10, "statefun_tasks.client.TaskStatus.__init__"]], "eventhandlers (class in statefun_tasks.events)": [[11, "statefun_tasks.events.EventHandlers"]], "__init__() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.__init__"]], "notify_emit_result() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_emit_result"]], "notify_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_finished"]], "notify_task_received() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_received"]], "notify_task_retry() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_retry"]], "notify_task_started() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.notify_task_started"]], "on_emit_result() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_emit_result"]], "on_task_finished() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_finished"]], "on_task_received() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_received"]], "on_task_retry() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_retry"]], "on_task_started() (statefun_tasks.events.eventhandlers method)": [[11, "statefun_tasks.events.EventHandlers.on_task_started"]]}})